{"version":3,"sources":["hooks/useApi.js","views/Home.js","contexts/RoomContext.js","views/Room.js","contexts/SocketContext.js","views/JoinRoom.js","App.js","index.js"],"names":["useApi","endpoint","method","a","body","isJson","baseUrl","headers","Headers","append","options","JSON","stringify","FormData","queryParameters","qp","URLSearchParams","Object","entries","forEach","param","toString","fetch","res","json","ok","Home","props","useState","roomName","setRoomName","password","setPassword","roomError","setRoomError","passwordError","setPasswordError","api","history","useHistory","createRoom","e","preventDefault","name","room","error","push","link","className","class","onSubmit","placeholder","type","value","onChange","target","RoomContext","createContext","UpdateRoomContext","useRoom","useContext","RoomContextProvider","children","setRoom","Provider","Room","useParams","useEffect","players","map","player","username","online","SocketContext","UpdateSocketContext","SocketContextProvider","window","io","socket","setSocket","on","JoinRoom","location","useLocation","setUsername","usernameError","setUsernameError","globalRoom","getRoomAsync","state","_","test","emit","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8872eb33.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst useApi = () => {\r\n    const returnFunction = async (endpoint, method, body = null, isJson=true) => {\r\n        const baseUrl = \"/api/\";\r\n        let headers = new Headers();\r\n        if(isJson){\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        let options = {\r\n            method,\r\n            body: body != null && method != \"GET\" ? JSON.stringify(body) : null,\r\n            headers\r\n        }\r\n        if(body instanceof FormData){\r\n            options.body=body;\r\n        }\r\n        let queryParameters = \"\";\r\n        if (method == \"GET\" && body!=null) {\r\n            let qp = new URLSearchParams();\r\n            Object.entries(body).forEach((param) => {\r\n                qp.append(param[0], param[1]);\r\n            });\r\n            queryParameters = `?${qp.toString()}`;\r\n        }\r\n        let res = await fetch(`${baseUrl}${endpoint}${queryParameters}`, options);\r\n        let json;\r\n        try {\r\n            json = await res.json();\r\n        }catch(e){\r\n            json={\r\n                ok: false\r\n            }\r\n        }\r\n        return json;\r\n    };\r\n    return returnFunction;\r\n};\r\n\r\nexport default useApi;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useApi from '../hooks/useApi';\r\nimport \"./Home.css\";\r\n\r\nconst Home = props => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const handleRoomChange = (e) => {\r\n        setRoomName(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomError, setRoomError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const api = useApi();\r\n    const history= useHistory();\r\n    const createRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setRoomError(\"\");\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        if(roomName==\"\"){\r\n            setRoomError(\"Room name can't be blank\");\r\n            return;\r\n        }\r\n        let room = await api(\"rooms\", \"POST\", {\r\n            name: roomName,\r\n            password: password\r\n        });\r\n        if (room.error) {\r\n            setRoomError(\"A room with the same name already exists, try another one\")\r\n        } else {\r\n            history.push(`/joinroom/${room.link}`, room);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    Welcome to Pokemon Go drafter, the definitive tool to create a draft tournament with your friends.\r\n                </h3>\r\n                <p class=\"explanation\">\r\n                    How it works: just type a name for your room and a password to create a new Room. Share the link that will be provided with your friends together with the password you choosed. The system will ask you to insert a nickname, the password of the room and a personal password. And just like that you'll have a way to select you draft team together with your friends. \r\n                </p>\r\n                <form onSubmit={createRoom}>\r\n                    <input placeholder=\"Room Name\" type=\"text\" value={roomName} onChange={handleRoomChange} />\r\n                    {roomError != \"\" && <div className=\"error\">\r\n                        {roomError}\r\n                    </div>}\r\n                    <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    {passwordError != \"\" && <div className=\"error\">\r\n                        {passwordError}\r\n                    </div>}\r\n                    <button type=\"submit\">Create Room</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst RoomContext = createContext(null);\r\nconst UpdateRoomContext = createContext(null);\r\n\r\nconst useRoom=()=>{\r\n    return useContext(RoomContext);\r\n}\r\n\r\nconst useSetRoom=()=>{\r\n    return useContext(UpdateRoomContext);\r\n}\r\n\r\nconst RoomContextProvider = ({ children }) => {\r\n    const [room, setRoom] = useState(null);\r\n    return (\r\n        <RoomContext.Provider value={room}>\r\n            <UpdateRoomContext.Provider value={setRoom}>\r\n                {children}\r\n            </UpdateRoomContext.Provider>\r\n        </RoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RoomContextProvider;\r\nexport { RoomContext, useRoom, useSetRoom };","import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useRoom } from '../contexts/RoomContext';\r\n\r\nlet socket;\r\nconst Room = props => {\r\n    const { link } = useParams();\r\n    const room = useRoom();\r\n    const history= useHistory();\r\n    useEffect(()=>{\r\n        if(room==null){\r\n            history.push(`/joinroom/${link}`);\r\n        }\r\n    },[room]);\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container\">\r\n                {room.name}\r\n                <ul>\r\n                    {\r\n                        room.players.map((player) => {\r\n                            return (\r\n                            <li key={player.username}>{player.username} {player.online==1?\"(Online)\":\"(Offline)\"}</li>\r\n                        )})\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Room;","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport { useSetRoom } from './RoomContext';\r\n\r\nconst SocketContext = createContext(null);\r\nconst UpdateSocketContext = createContext(null);\r\n\r\nconst useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nconst useSetSocket = () => {\r\n    return useContext(UpdateSocketContext);\r\n}\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState(window.io());\r\n    const setRoom=useSetRoom();\r\n    useEffect(() => {\r\n        socket.on(\"updateRoom\", room => {\r\n            setRoom(room);\r\n        });\r\n    }, [setRoom]);\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            <UpdateSocketContext.Provider value={setSocket}>\r\n                {socket && children}\r\n            </UpdateSocketContext.Provider>\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SocketContextProvider;\r\nexport { SocketContext, useSocket, useSetSocket };","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext'\r\nimport useApi from '../hooks/useApi'\r\n\r\nconst JoinRoom = props => {\r\n    const { link } = useParams();\r\n    const location = useLocation();\r\n    const [room, setRoom] = useState(null);\r\n    const api = useApi();\r\n    const socket = useSocket();\r\n    const [username, setUsername] = useState(\"\");\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const history = useHistory();\r\n    const globalRoom=useRoom();\r\n    const joinRoom = (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setUsernameError(\"\");\r\n        if(!/^\\w+$/.test(username)){\r\n            setUsernameError(\"Username can't contain spaces or special characters and can't be blank\");\r\n            return;\r\n        }\r\n        if(password==\"\"){\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        socket.emit(\"joinRoom\", { username, password, room: link})\r\n    };\r\n    useEffect(() => {\r\n        const getRoomAsync = async () => {\r\n            let room = await api(`rooms/${link}`, \"GET\");\r\n            setRoom(room);\r\n        };\r\n        if (location.state) {\r\n            setRoom(location.state);\r\n        } else {\r\n            getRoomAsync();\r\n        }\r\n        socket.on(\"wrongPassword\", _ => {\r\n            setPasswordError(\"Wrong password\")\r\n        });\r\n    }, []);\r\n    useEffect(()=>{\r\n        if(globalRoom!=null){\r\n            history.push(`/room/${globalRoom.link}`);\r\n        }\r\n    },[globalRoom])\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    Joining room {room.name}\r\n                </h3>\r\n                <form onSubmit={joinRoom}>\r\n                    <input placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                    {usernameError != \"\" && <div className=\"error\">\r\n                        {usernameError}\r\n                    </div>}\r\n                    <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    {passwordError != \"\" && <div className=\"error\">\r\n                        {passwordError}\r\n                    </div>}\r\n                    <button type=\"submit\">Join</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JoinRoom;","import './App.css';\nimport { Home, Room, JoinRoom } from './views'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}>\n        </Route>\n        <Route path=\"/room/:link\" exact component={Room}>\n        </Route>\n        <Route path=\"/joinroom/:link\" exact component={JoinRoom}>\n        </Route>\n        <Route path=\"/test\" exact>\n          <div>Test</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SocketContextProvider from './contexts/SocketContext'\nimport RoomContextProvider from './contexts/RoomContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoomContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </RoomContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}