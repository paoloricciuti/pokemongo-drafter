{"version":3,"sources":["components/Footer.js","components/Logo.js","hooks/useApi.js","views/Home.js","contexts/RoomContext.js","contexts/SocketContext.js","views/Room.js","views/JoinRoom.js","App.js","index.js"],"names":["Footer","props","className","href","target","style","color","Logo","backgroundImage","useApi","endpoint","method","a","body","isJson","baseUrl","headers","Headers","append","options","JSON","stringify","FormData","queryParameters","qp","URLSearchParams","Object","entries","forEach","param","toString","fetch","res","json","ok","Home","useState","roomName","setRoomName","password","setPassword","roomError","setRoomError","passwordError","setPasswordError","api","history","useHistory","createRoom","e","preventDefault","test","name","room","error","push","link","class","onSubmit","placeholder","type","value","onChange","RoomContext","createContext","UpdateRoomContext","useRoom","useContext","useSetRoom","RoomContextProvider","children","setRoom","Provider","SocketContext","UpdateSocketContext","useSocket","SocketContextProvider","window","io","socket","setSocket","useEffect","on","TYPES","TYPE_COLORS","notificationSound","Audio","Room","useParams","location","useLocation","state","username","searchQuery","setSearchQuery","rounds","setRounds","banRounds","setBanRounds","handleRounds","useCallback","val","Math","max","setBans","Array","map","elem","handleBanRounds","banRef","useRef","bans","selectedLeague","setSelectedLeague","pvpokeRankings","setPvpokeRankings","selectedPokemon","setSelectedPokemon","pickPokemon","players","find","player","pick_order","choosing","toLowerCase","selected","dataset","id","choosed_list","indexOf","pick","speciesId","alert","selectPokemon","chooser","newPick","room_link","speciesName","pick_id","emit","startDraft","confirm","league","checkHide","picked","mode","charAt","searched","replaceAll","includes","types","reduce","accumulator","element","species","substr","values","moves","flatMap","move","moveId","matchups","matchup","opponent","isInfoPopupOpened","setIsInfoPopupOpened","togglePopup","prev","isChatOpen","setIsChatOpen","chatMessage","setChatMessage","chat","setChat","chatRef","sendChat","msg","getPvpokeRankingsAsync","started","floor","length","ban_rounds","play","Notification","permission","requestPermission","console","log","scrolledDown","current","scrollHeight","clientHeight","scrollTop","chatTitleRef","animationNewChat","classList","add","addEventListener","remove","data-title","online","team","pokemon","index","replace","position","onClick","data-id","data-name","host","min","width","ref","querySelectorAll","checked","ban","i","display","flexDirection","justifyContent","alignItems","disabled","filter","Boolean","fontWeight","date","Date","eta","setHours","getHours","getTimezoneOffset","author","String","padStart","getMinutes","contains","stats","atk","def","hp","fastMoves","fast","background","red","green","blue","chargedMoves","charge","JoinRoom","icon","setUsername","roomPassword","setRoomPassword","usernameError","setUsernameError","roomPasswordError","setRoomPasswordError","globalRoom","sha256","message","encoder","TextEncoder","data","encode","crypto","subtle","digest","hash","binary","bytes","Uint8Array","len","byteLength","fromCharCode","btoa","copyLink","navigator","clipboard","writeText","joinRoom","getRoomAsync","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b8298b1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = props => {\r\nreturn (\r\n    <div className=\"footer\">\r\n        <a href=\"https://twitter.com/pogodrafter\" target=\"_blank\"><i style={{color: \"#1DA1F2\"}} className=\"fa fa-twitter\"></i> Follow me on Twitter @pogodrafter for questions and suggestions</a>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Logo = props => {\r\n    return (\r\n        <div style={{ backgroundImage: 'url(../pogodrafter.png)' }} className=\"logo\">\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst useApi = () => {\r\n    const returnFunction = async (endpoint, method, body = null, isJson=true) => {\r\n        const baseUrl = \"/api/\";\r\n        let headers = new Headers();\r\n        if(isJson){\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        let options = {\r\n            method,\r\n            body: body != null && method != \"GET\" ? JSON.stringify(body) : null,\r\n            headers\r\n        }\r\n        if(body instanceof FormData){\r\n            options.body=body;\r\n        }\r\n        let queryParameters = \"\";\r\n        if (method == \"GET\" && body!=null) {\r\n            let qp = new URLSearchParams();\r\n            Object.entries(body).forEach((param) => {\r\n                qp.append(param[0], param[1]);\r\n            });\r\n            queryParameters = `?${qp.toString()}`;\r\n        }\r\n        let res = await fetch(`${baseUrl}${endpoint}${queryParameters}`, options);\r\n        let json;\r\n        try {\r\n            json = await res.json();\r\n        }catch(e){\r\n            json={\r\n                ok: false\r\n            }\r\n        }\r\n        return json;\r\n    };\r\n    return returnFunction;\r\n};\r\n\r\nexport default useApi;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Logo';\r\nimport useApi from '../hooks/useApi';\r\nimport \"./Home.css\";\r\n\r\nconst Home = props => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const handleRoomChange = (e) => {\r\n        setRoomName(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomError, setRoomError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const api = useApi();\r\n    const history= useHistory();\r\n    const createRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setRoomError(\"\");\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        if(!/^(\\w|\\s)+$/.test(roomName)){\r\n            setRoomError(\"Room name can't contain special characters and can't be blank\");\r\n            return;\r\n        }\r\n        let room = await api(\"rooms\", \"POST\", {\r\n            name: roomName,\r\n            password: password\r\n        });\r\n        if (room.error) {\r\n            setRoomError(\"A room with the same name already exists, try another one\")\r\n        } else {\r\n            history.push(`/joinroom/${room.link}`, {room, password});\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <Logo />\r\n                <Footer />\r\n                <h3>\r\n                    Welcome to Pokemon Go drafter, the definitive tool to create a draft tournament with your friends.\r\n                </h3>\r\n                <p class=\"explanation\">\r\n                    Choose a room name and a room password, share the link and the password with friends and start drafting.\r\n                </p>\r\n                <form onSubmit={createRoom}>\r\n                    <input placeholder=\"Room Name\" type=\"text\" value={roomName} onChange={handleRoomChange} />\r\n                    {roomError != \"\" && <div className=\"error\">\r\n                        {roomError}\r\n                    </div>}\r\n                    <input placeholder=\"Room Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    {passwordError != \"\" && <div className=\"error\">\r\n                        {passwordError}\r\n                    </div>}\r\n                    <button type=\"submit\">Create Room</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst RoomContext = createContext(null);\r\nconst UpdateRoomContext = createContext(null);\r\n\r\nconst useRoom=()=>{\r\n    return useContext(RoomContext);\r\n}\r\n\r\nconst useSetRoom=()=>{\r\n    return useContext(UpdateRoomContext);\r\n}\r\n\r\nconst RoomContextProvider = ({ children }) => {\r\n    const [room, setRoom] = useState(null);\r\n    return (\r\n        <RoomContext.Provider value={room}>\r\n            <UpdateRoomContext.Provider value={setRoom}>\r\n                {children}\r\n            </UpdateRoomContext.Provider>\r\n        </RoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RoomContextProvider;\r\nexport { RoomContext, useRoom, useSetRoom };","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport { useSetRoom } from './RoomContext';\r\n\r\nconst SocketContext = createContext(null);\r\nconst UpdateSocketContext = createContext(null);\r\n\r\nconst useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nconst useSetSocket = () => {\r\n    return useContext(UpdateSocketContext);\r\n}\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState(window.io());\r\n    const setRoom=useSetRoom();\r\n    useEffect(() => {\r\n        socket.on(\"updateRoom\", room => {\r\n            setRoom(room);\r\n        });\r\n    }, [setRoom]);\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            <UpdateSocketContext.Provider value={setSocket}>\r\n                {socket && children}\r\n            </UpdateSocketContext.Provider>\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SocketContextProvider;\r\nexport { SocketContext, useSocket, useSetSocket };","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport useApi from '../hooks/useApi';\r\n\r\nconst TYPES = [\"bug\", \"dark\", \"dragon\", \"electric\", \"fairy\", \"fighting\", \"fire\", \"flying\", \"ghost\", \"grass\", \"ground\", \"ice\", \"normal\", \"poison\", \"psychic\", \"rock\", \"steel\", \"water\"];\r\n\r\nconst TYPE_COLORS={\r\n    \"ground\": {\r\n      \"red\": 215,\r\n      \"green\": 141,\r\n      \"blue\": 94\r\n    },\r\n    \"ghost\": {\r\n      \"red\": 97,\r\n      \"green\": 109,\r\n      \"blue\": 191\r\n    },\r\n    \"normal\": {\r\n      \"red\": 146,\r\n      \"green\": 153,\r\n      \"blue\": 161\r\n    },\r\n    \"dark\": {\r\n      \"red\": 101,\r\n      \"green\": 103,\r\n      \"blue\": 118\r\n    },\r\n    \"water\": {\r\n      \"red\": 94,\r\n      \"green\": 170,\r\n      \"blue\": 220\r\n    },\r\n    \"fighting\": {\r\n      \"red\": 215,\r\n      \"green\": 64,\r\n      \"blue\": 95\r\n    },\r\n    \"electric\": {\r\n      \"red\": 247,\r\n      \"green\": 218,\r\n      \"blue\": 92\r\n    },\r\n    \"flying\": {\r\n      \"red\": 155,\r\n      \"green\": 179,\r\n      \"blue\": 225\r\n    },\r\n    \"poison\": {\r\n      \"red\": 185,\r\n      \"green\": 98,\r\n      \"blue\": 205\r\n    },\r\n    \"bug\": {\r\n      \"red\": 153,\r\n      \"green\": 197,\r\n      \"blue\": 42\r\n    },\r\n    \"rock\": {\r\n      \"red\": 203,\r\n      \"green\": 189,\r\n      \"blue\": 142\r\n    },\r\n    \"fire\": {\r\n      \"red\": 253,\r\n      \"green\": 161,\r\n      \"blue\": 88\r\n    },\r\n    \"grass\": {\r\n      \"red\": 91,\r\n      \"green\": 191,\r\n      \"blue\": 103\r\n    },\r\n    \"steel\": {\r\n      \"red\": 82,\r\n      \"green\": 152,\r\n      \"blue\": 164\r\n    },\r\n    \"ice\": {\r\n      \"red\": 124,\r\n      \"green\": 210,\r\n      \"blue\": 199\r\n    },\r\n    \"psychic\": {\r\n      \"red\": 250,\r\n      \"green\": 135,\r\n      \"blue\": 132\r\n    },\r\n    \"dragon\": {\r\n      \"red\": 11,\r\n      \"green\": 110,\r\n      \"blue\": 191\r\n    },\r\n    \"fairy\": {\r\n      \"red\": 255,\r\n      \"green\": 175,\r\n      \"blue\": 238\r\n    }\r\n  };\r\n\r\nconst notificationSound = new Audio(\"../notification.mp3\");\r\n\r\nconst Room = props => {\r\n    const { link } = useParams();\r\n    const room = useRoom();\r\n    const setRoom = useSetRoom();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const socket = useSocket();\r\n    const api = useApi();\r\n    const [username, setUsername] = useState(location.state);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const handleSearchQueryChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n    const [rounds, setRounds] = useState(6);\r\n    const [banRounds, setBanRounds] = useState(0);\r\n    const handleRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 1);\r\n        setBans([...new Array((banRounds + val))].map(elem => false));\r\n        setRounds(val);\r\n    }, [banRounds]);\r\n    const handleBanRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 0);\r\n        setBans([...new Array((rounds + val))].map(elem => false));\r\n        setBanRounds(val);\r\n    }, [rounds]);\r\n    const banRef = useRef();\r\n    const [bans, setBans] = useState([false, false, false, false, false, false]);\r\n    const handleCheckboxes = (e) => {\r\n        setBans([...banRef.current.querySelectorAll(\"input\")].map(elem => elem.checked));\r\n    }\r\n    const [selectedLeague, setSelectedLeague] = useState(\"1500\");\r\n    const handleSelectedLeague = (e) => {\r\n        setSelectedLeague(e.target.value);\r\n    };\r\n    const [pvpokeRankings, setPvpokeRankings] = useState(null);\r\n    const [selectedPokemon, setSelectedPokemon] = useState(null);\r\n    const pickPokemon = useCallback((e) => {\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (chooser.username.toLowerCase() != username.toLowerCase()) {\r\n            return;\r\n        }\r\n        let selected = e.target.dataset.id;\r\n        if (room.choosed_list.indexOf(selected) != -1) {\r\n            alert(\"This pokemon was already selected.\");\r\n            return;\r\n        }\r\n        setSelectedPokemon(pvpokeRankings.find(pick => pick.speciesId == selected));\r\n    }, [room, username, pvpokeRankings]);\r\n    const selectPokemon = useCallback(() => {\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (chooser.username.toLowerCase() != username.toLowerCase()) {\r\n            return;\r\n        }\r\n        if (room.choosed_list.indexOf(selectedPokemon.speciesId) != -1) {\r\n            alert(\"This pokemon was already selected.\");\r\n        } else {\r\n            let newPick = {\r\n                room_link: link,\r\n                chooser,\r\n                pick: selectedPokemon.speciesName,\r\n                pick_id: selectedPokemon.speciesId\r\n            }\r\n            setSearchQuery(\"\");\r\n            socket.emit(\"pick\", newPick);\r\n            setSelectedPokemon(null);\r\n        }\r\n    }, [room, socket, selectedPokemon, username]);\r\n    const startDraft = useCallback(() => {\r\n        if (window.confirm(\"Are you sure you want to start the draft? No other person will be able to join after the draft is started.\")) {\r\n            socket.emit(\"startDraft\", { room_link: link, bans, league: selectedLeague });\r\n        }\r\n    }, [socket, bans, selectedLeague, link])\r\n    const checkHide = useCallback((pick) => {\r\n        const picked = room.choosed_list.indexOf(pick.speciesId) == -1;\r\n        const mode = searchQuery.charAt(0);\r\n        let searched = pick.speciesId.replaceAll(\"_\", \" \").toLowerCase().includes(searchQuery.toLowerCase());\r\n        if (TYPES.indexOf(searchQuery) != -1) {\r\n            searched = pick.types.reduce((accumulator, element) => accumulator || element.toLowerCase() == searchQuery.toLowerCase(), false)\r\n        }\r\n        if (mode == \"@\") {\r\n            let species = searchQuery.substr(1);\r\n            if (TYPES.indexOf(species) == -1) {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.moveId.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n            } else {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.type.toLowerCase()).reduce((accumulator, element) => accumulator || element == species, false);\r\n            }\r\n        } else if (mode == \"-\") {\r\n            let species = searchQuery.substr(1);\r\n            searched = Object.values(pick.matchups).flatMap(matchup => matchup).map(matchup => matchup.opponent.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n        }\r\n        return picked && searched;\r\n    }, [searchQuery, room]);\r\n    const [isInfoPopupOpened, setIsInfoPopupOpened] = useState(false);\r\n    const togglePopup = () => {\r\n        setIsInfoPopupOpened(prev => !prev);\r\n    }\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [chatMessage, setChatMessage] = useState(\"\");\r\n    const toggleChat = () => {\r\n        setIsChatOpen(prev => !prev);\r\n    }\r\n    const [chat, setChat] = useState([]);\r\n    const chatRef = useRef();\r\n    const sendChat = useCallback((e) => {\r\n        e.preventDefault();\r\n        socket.emit(\"chatMsg\", {\r\n            username: username,\r\n            msg: chatMessage,\r\n            room_link: link\r\n        });\r\n        setChatMessage(\"\");\r\n    }, [socket, username, chatMessage, link]);\r\n    useEffect(() => {\r\n        if (room == null) {\r\n            history.push(`/joinroom/${link}`);\r\n        } else {\r\n            if (!pvpokeRankings) {\r\n                const getPvpokeRankingsAsync = async () => {\r\n                    if (!room?.league) {\r\n                        return;\r\n                    }\r\n                    let res = await api(`rankings/${room.league}`, \"GET\");\r\n                    setPvpokeRankings(res);\r\n                };\r\n                getPvpokeRankingsAsync();\r\n            }\r\n            if (room?.started) {\r\n                if (!(Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length) && room?.players?.find(player => player.pick_order == room.choosing)?.username?.toLowerCase() == username?.toLowerCase()) {\r\n                    notificationSound.play();\r\n                }\r\n                if ((\"Notification\" in window) && Notification.permission !== \"granted\") {\r\n                    Notification.requestPermission();\r\n                }\r\n                if ((\"Notification\" in window) && Notification.permission === \"granted\") {\r\n                    if (!(Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length) && room?.players?.find(player => player.pick_order == room.choosing)?.username?.toLowerCase() == username?.toLowerCase()) {\r\n                        try {\r\n                            new Notification(\"It's your turn\", { body: `Hey ${username} it's your turn to pick for the draft ${room.name}` });\r\n                        } catch (e) {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [room]);\r\n    useEffect(() => {\r\n        if (room) {\r\n            socket.on(\"updateChat\", chat => {\r\n                console.log(\"Chat updated\");\r\n                let scrolledDown = chatRef.current.scrollHeight - chatRef.current.clientHeight == chatRef.current.scrollTop;\r\n                setChat(chat);\r\n                if (scrolledDown) {\r\n                    chatRef.current.scrollTop = chatRef.current.scrollHeight - chatRef.current.clientHeight;\r\n                }\r\n            })\r\n        }\r\n    }, [room, socket, setChat, chatRef]);\r\n    const chatTitleRef = useRef();\r\n    const animationNewChat = useCallback(() => {\r\n        if (chatTitleRef.current) {\r\n            if (!isChatOpen) {\r\n                chatTitleRef.current.classList.add(\"new-msg\");\r\n                chatTitleRef.current.addEventListener(\"animationend\", () => {\r\n                    chatTitleRef.current.classList.remove(\"new-msg\");\r\n                })\r\n            }\r\n        }\r\n    },\r\n        [isChatOpen, chatTitleRef]);\r\n    useEffect(animationNewChat, [chat]);\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className={`container titled room-container ${Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length && \"finished\"}`} data-title={room.name}>\r\n                {\r\n                    Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length && \"finished\"\r\n                    &&\r\n                    <div className=\"ended\">\r\n                        The drafting is over...have a good tournament!\r\n                    </div>\r\n                }\r\n                <div className=\"container-element playerlist\">\r\n                    <ul>\r\n                        {\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <li className={player.online ? \"online\" : \"\"} key={player.username}>\r\n                                        <span>{player.username}</span>\r\n                                        <hr />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"container-element teams\">\r\n                    {\r\n                        room?.started ?\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <div className={`player-team titled ${!(Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length) && room.players.find(player => player.pick_order == room.choosing).username == player.username ? \"choosing\" : \"\"} ${room.ban_rounds[Math.floor(room.choosed_list.length / room.players.length)] ? \"banning\" : \"\"}`} data-title={player.username}>\r\n                                        {\r\n                                            player.team.map((pokemon, index) => {\r\n                                                return (\r\n                                                    <div className={`pick ${room.ban_rounds[index] ? \"ban\" : \"\"}`} style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pokemon.pick_id.replace(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) :\r\n                            <h2>Everyone's team will be shown here as soon as the draft starts!</h2>\r\n                    }\r\n                </div>\r\n                <div className=\"container-element commands\">\r\n                    {\r\n                        room?.started ?\r\n                            <>\r\n                                <div className={`chooser ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() == username.toLowerCase() ? \"your-turn\" : \"\"}`}>\r\n                                    Chooser: {room && room.players.find(player => player.pick_order == room.choosing).username}\r\n                                </div>\r\n                                {\r\n                                    room.ban_rounds[Math.floor(room.choosed_list.length / room.players.length)] &&\r\n                                    <div className=\"warning\">\r\n                                        <i className=\"material-icons\">warning</i> banning round.\r\n                                    </div>\r\n                                }\r\n                                <div>\r\n\r\n                                </div>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                    <input className=\"searchBox\" placeholder=\"Search...\" type=\"text\" value={searchQuery} onChange={handleSearchQueryChange} />\r\n                                    <i className=\"material-icons info\" onClick={togglePopup}>info</i>\r\n                                </div>\r\n                                <div className=\"picks\">\r\n                                    {\r\n                                        pvpokeRankings ?\r\n                                            pvpokeRankings.map(pick => {\r\n                                                return (\r\n                                                    <div\r\n                                                        className={`pick ${checkHide(pick) ? \"\" : \"hidden\"} ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() != username.toLowerCase() ? \"disabled\" : \"\"}`}\r\n                                                        style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pick.speciesId.replaceAll(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}\r\n                                                        data-id={pick.speciesId}\r\n                                                        data-name={pick.speciesName}\r\n                                                        onClick={pickPokemon}\r\n                                                    >\r\n                                                    </div>\r\n                                                );\r\n                                            })\r\n                                            :\r\n                                            <div className=\"loadingContainer\">\r\n                                                <div className=\"loading\"></div>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </> :\r\n                            <div>\r\n                                {\r\n                                    room.players.find(player => player.username.toLowerCase() == username.toLowerCase()).host ?\r\n                                        <div className=\"options\">\r\n                                            <label>Rounds:</label>\r\n                                            <input type=\"number\" min=\"1\" value={rounds} onChange={handleRounds} />\r\n                                            <label>Ban:</label>\r\n                                            <input type=\"number\" min=\"0\" value={banRounds} onChange={handleBanRounds} />\r\n                                            {\r\n                                                banRounds > 0 && (\r\n                                                    <div style={{ width: \"100%\" }}>\r\n                                                        Ban columns:\r\n                                                        <div ref={banRef} className=\"bans\" onClick={handleCheckboxes}>\r\n                                                            {\r\n                                                                bans.map((ban, i) => {\r\n                                                                    return (\r\n                                                                        <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\", alignItems: \"center\" }}>\r\n                                                                            <span>{(i + 1)}</span>\r\n                                                                            <input disabled={bans.filter(Boolean).length == banRounds && !ban} checked={ban} type=\"checkbox\"></input>\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            <label>League:</label>\r\n                                            <select value={selectedLeague} onChange={handleSelectedLeague}>\r\n                                                <option value=\"1500\">Great League</option>\r\n                                                <option value=\"2500\">Ultra League</option>\r\n                                                <option value=\"10000\">Master League</option>\r\n                                            </select> <br />\r\n                                            <button className=\"lighter\" onClick={startDraft}>Start Draft</button>\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            The host <span style={{ fontWeight: \"bold\" }}>{room.players.find(player => player.host).username}</span> hasn't started the draft yet.\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-container\">\r\n                <div ref={chatTitleRef} className=\"chat-title\" onClick={toggleChat}>Chat <i className=\"material-icons\">close</i></div>\r\n                <div className={`chat-and-commands ${isChatOpen ? \"\" : \"chat-closed\"}`}>\r\n                    <div ref={chatRef} className=\"chat\">\r\n                        {\r\n                            chat.map(msg => {\r\n                                let date=new Date(msg.eta);\r\n                                date.setHours(date.getHours()-(new Date().getTimezoneOffset()/60));\r\n                                return (\r\n                                    <div className={`chat-msg ${msg.author.toLowerCase() == username.toLowerCase() ? \"personal\" : \"\"}`}>\r\n                                        <div className=\"chat-author\">\r\n                                            {msg.author}\r\n                                        </div>\r\n                                        <div className=\"chat-content\">\r\n                                            {msg.msg}\r\n                                        </div>\r\n                                        <div className=\"chat-eta\">\r\n                                            {`${String(date.getHours()).padStart(2, \"0\")}:${String(date.getMinutes()).padStart(2, \"0\")}`}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"chat-commands\">\r\n                        <form onSubmit={sendChat}>\r\n                            <input value={chatMessage} onChange={(e) => setChatMessage(e.target.value)} />\r\n                            <button disabled={!chatMessage} type=\"submit\"><i className=\"material-icons\">send</i></button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div onClick={togglePopup} className={`info-popup ${isInfoPopupOpened ? \"\" : \"closed\"}`}>\r\n                <ul>\r\n                    <li>Type <b><i>pokemonname</i></b> to list a pokémon with that name</li>\r\n                    <li>Type <b><i>type</i></b> to list pokémon with that type</li>\r\n                    <li>Type <b><i>@move</i></b> to list pokémon with that move</li>\r\n                    <li>Type <b><i>@type</i></b> to list pokémon with that move type</li>\r\n                    <li>Type <b><i>-pokemonname</i></b> to list counters for that pokémon</li>\r\n                </ul>\r\n            </div>\r\n            {\r\n                selectedPokemon &&\r\n                <div className=\"confirm-pokemon\" onClick={(e)=> e.target.classList.contains(\"confirm-pokemon\") && (setSelectedPokemon(null))}>\r\n                    <div className=\"pokemon-card\">\r\n                        <div className=\"pokemon-card-img\" style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${selectedPokemon.speciesId.replaceAll(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}>\r\n                        </div>\r\n                        <div className=\"pokemon-card-name\">\r\n                            {selectedPokemon.speciesName}\r\n                        </div>\r\n                        <div className=\"pokemon-card-types\">\r\n                            {\r\n                                selectedPokemon.types.map(type => {\r\n                                    return(\r\n                                        type!=\"none\" && <div style={{backgroundImage: `url(../types/${type}.png)`}}></div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"pokemon-card-stats\">\r\n                            <div className=\"pokemon-card-stat\">\r\n                                ATK\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                DEF\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                HP\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                {selectedPokemon.stats.atk}\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                {selectedPokemon.stats.def}\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                {selectedPokemon.stats.hp}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pokemon-card-moves\">\r\n                            <div className=\"pokemon-card-fasts\">\r\n                                {\r\n                                    selectedPokemon.moves.fastMoves.map(fast => {\r\n                                        return (\r\n                                            <div style={{background: `rgb(${TYPE_COLORS[fast.type].red}, ${TYPE_COLORS[fast.type].green}, ${TYPE_COLORS[fast.type].blue})`}} className=\"pokemon-card-fast\">\r\n                                                {fast.moveId.replaceAll(\"_\", \" \")}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className=\"pokemon-card-charges\">\r\n                                {\r\n                                    selectedPokemon.moves.chargedMoves.map(charge => {\r\n                                        return (\r\n                                            <div style={{background: `rgb(${TYPE_COLORS[charge.type].red}, ${TYPE_COLORS[charge.type].green}, ${TYPE_COLORS[charge.type].blue})`}}  className=\"pokemon-card-charge\">\r\n                                                {charge.moveId.replaceAll(\"_\", \" \")}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pokemon-card-buttons\">\r\n                            <button className=\"lighter\" onClick={() => { setSelectedPokemon(null) }}>Cancel</button>\r\n                            <button className=\"lighter\" onClick={selectPokemon}>{room.ban_rounds[Math.floor(room.choosed_list.length / room.players.length)]?\"Ban\":\"Select\"}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Room;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Logo';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext'\r\nimport useApi from '../hooks/useApi'\r\n\r\nconst JoinRoom = props => {\r\n    const { link } = useParams();\r\n    const icon = useRef();\r\n    const location = useLocation();\r\n    const [room, setRoom] = useState(null);\r\n    const api = useApi();\r\n    const socket = useSocket();\r\n    const [username, setUsername] = useState(\"\");\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomPassword, setRoomPassword] = useState(location.state? location.state.password:\"\");\r\n    const handleRoomPasswordChange = (e) => {\r\n        setRoomPassword(e.target.value);\r\n    };\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [roomPasswordError, setRoomPasswordError] = useState(\"\");\r\n    const history = useHistory();\r\n    const globalRoom = useRoom();\r\n    const sha256 = async (message) => {\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(message);\r\n        const hash = await crypto.subtle.digest('SHA-256', data);\r\n        let binary = '';\r\n        const bytes = new Uint8Array(hash);\r\n        const len = bytes.byteLength;\r\n        for (let i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return btoa(binary);\r\n    }\r\n    const copyLink = async () => {\r\n        await navigator.clipboard.writeText(`${window.location.href}`);\r\n        icon.current.classList.add(\"copied\");\r\n    }\r\n    const joinRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setUsernameError(\"\");\r\n        setRoomPasswordError(\"\");\r\n        if (await sha256(roomPassword) != room.password) {\r\n            setRoomPasswordError(\"Wrong room Password\");\r\n            return;\r\n        }\r\n        if (!/^\\w+$/.test(username)) {\r\n            setUsernameError(\"Username can't contain spaces or special characters and can't be blank\");\r\n            return;\r\n        }\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        socket.emit(\"joinRoom\", { username, password, room: link })\r\n    };\r\n    useEffect(() => {\r\n        const getRoomAsync = async () => {\r\n            let room = await api(`rooms/${link}`, \"GET\");\r\n            setRoom(room);\r\n        };\r\n        if (location.state) {\r\n            setRoom(location.state.room);\r\n        } else {\r\n            getRoomAsync();\r\n        }\r\n        socket.on(\"error\", message => {\r\n            if (message == \"Wrong password\") {\r\n                setPasswordError(\"Wrong password\")\r\n            } else {\r\n                setRoomPasswordError(message);\r\n            }\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (globalRoom != null) {\r\n            history.push(`/room/${globalRoom.link}`, username);\r\n        }\r\n    }, [globalRoom])\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container\">\r\n                <Logo />\r\n                <Footer />\r\n                <h3>\r\n                    {!(room.ok === false) ? `Joining room ${room.name}` : `No room with name ${link}`}\r\n                </h3>\r\n                {!(room.ok === false) && (\r\n                    <>\r\n                        <p className=\"explanation\">\r\n                            Choose your Username and Password, you'll need them to come back later!\r\n                        </p>\r\n                        <form onSubmit={joinRoom}>\r\n                            <input placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                            {usernameError != \"\" && <div className=\"error\">\r\n                                {usernameError}\r\n                            </div>}\r\n                            <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                            {passwordError != \"\" && <div className=\"error\">\r\n                                {passwordError}\r\n                            </div>}\r\n                            <p className=\"explanation\">\r\n                                Share the following link and the room password with your friends to let them join the draft!\r\n                            <code class=\"share-link\" onClick={copyLink}>\r\n                                    <span className=\"link\">\r\n                                        {window.location.href}\r\n                                    </span>\r\n                                    <i ref={icon} class=\"material-icons right\">content_copy</i>\r\n                                </code>\r\n                            </p>\r\n                            {\r\n                                !location.state &&\r\n                                    <>\r\n                                        <input placeholder=\"Room Password\" type=\"password\" value={roomPassword} onChange={handleRoomPasswordChange} />\r\n                                        {roomPasswordError != \"\" && <div className=\"error\">\r\n                                            {roomPasswordError}\r\n                                        </div>}\r\n                                    </>\r\n                            }\r\n                            <button type=\"submit\">Join</button>\r\n                        </form>\r\n                    </>\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JoinRoom;","import './App.css';\nimport { Home, Room, JoinRoom } from './views'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}>\n        </Route>\n        <Route path=\"/room/:link\" exact component={Room}>\n        </Route>\n        <Route path=\"/joinroom/:link\" exact component={JoinRoom}>\n        </Route>\n        <Route path=\"/test\" exact>\n          <div>Test</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SocketContextProvider from './contexts/SocketContext'\nimport RoomContextProvider from './contexts/RoomContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoomContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </RoomContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}