{"version":3,"sources":["hooks/useApi.js","views/Home.js","contexts/RoomContext.js","contexts/SocketContext.js","views/Room.js","views/JoinRoom.js","App.js","index.js"],"names":["useApi","endpoint","method","a","body","isJson","baseUrl","headers","Headers","append","options","JSON","stringify","FormData","queryParameters","qp","URLSearchParams","Object","entries","forEach","param","toString","fetch","res","json","ok","Home","props","useState","roomName","setRoomName","password","setPassword","roomError","setRoomError","passwordError","setPasswordError","api","history","useHistory","createRoom","e","preventDefault","test","name","room","error","push","link","className","class","onSubmit","placeholder","type","value","onChange","target","RoomContext","createContext","UpdateRoomContext","useRoom","useContext","useSetRoom","RoomContextProvider","children","setRoom","Provider","SocketContext","UpdateSocketContext","useSocket","SocketContextProvider","window","io","socket","setSocket","useEffect","on","TYPES","notificationSound","Audio","Room","useParams","location","useLocation","state","username","searchQuery","setSearchQuery","rounds","setRounds","banRounds","setBanRounds","handleRounds","useCallback","val","Math","max","setBans","Array","map","elem","handleBanRounds","banRef","useRef","bans","selectedLeague","setSelectedLeague","pvpokeRankings","setPvpokeRankings","pickPokemon","chooser","players","find","player","pick_order","choosing","toLowerCase","selected","dataset","id","confirm","choosed_list","indexOf","alert","newPick","room_link","pick","pick_id","emit","startDraft","league","checkHide","picked","speciesId","mode","charAt","searched","replaceAll","includes","types","reduce","accumulator","element","species","substr","values","moves","flatMap","move","moveId","matchups","matchup","opponent","isInfoPopupOpened","setIsInfoPopupOpened","togglePopup","prev","isChatOpen","setIsChatOpen","chatMessage","setChatMessage","chat","setChat","chatRef","sendChat","msg","getPvpokeRankingsAsync","started","play","Notification","permission","requestPermission","scrolledDown","current","scrollHeight","clientHeight","scrollTop","chatTitleRef","animationNewChat","classList","add","addEventListener","remove","floor","length","ban_rounds","data-title","online","team","pokemon","index","style","backgroundImage","replace","position","onClick","data-id","data-name","speciesName","host","min","width","ref","querySelectorAll","checked","ban","i","display","flexDirection","justifyContent","alignItems","disabled","filter","Boolean","fontWeight","author","eta","JoinRoom","icon","setUsername","roomPassword","setRoomPassword","usernameError","setUsernameError","roomPasswordError","setRoomPasswordError","globalRoom","sha256","message","encoder","TextEncoder","data","encode","crypto","subtle","digest","hash","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","copyLink","navigator","clipboard","writeText","href","joinRoom","getRoomAsync","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edcc5c32.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst useApi = () => {\r\n    const returnFunction = async (endpoint, method, body = null, isJson=true) => {\r\n        const baseUrl = \"/api/\";\r\n        let headers = new Headers();\r\n        if(isJson){\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        let options = {\r\n            method,\r\n            body: body != null && method != \"GET\" ? JSON.stringify(body) : null,\r\n            headers\r\n        }\r\n        if(body instanceof FormData){\r\n            options.body=body;\r\n        }\r\n        let queryParameters = \"\";\r\n        if (method == \"GET\" && body!=null) {\r\n            let qp = new URLSearchParams();\r\n            Object.entries(body).forEach((param) => {\r\n                qp.append(param[0], param[1]);\r\n            });\r\n            queryParameters = `?${qp.toString()}`;\r\n        }\r\n        let res = await fetch(`${baseUrl}${endpoint}${queryParameters}`, options);\r\n        let json;\r\n        try {\r\n            json = await res.json();\r\n        }catch(e){\r\n            json={\r\n                ok: false\r\n            }\r\n        }\r\n        return json;\r\n    };\r\n    return returnFunction;\r\n};\r\n\r\nexport default useApi;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useApi from '../hooks/useApi';\r\nimport \"./Home.css\";\r\n\r\nconst Home = props => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const handleRoomChange = (e) => {\r\n        setRoomName(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomError, setRoomError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const api = useApi();\r\n    const history= useHistory();\r\n    const createRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setRoomError(\"\");\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        if(!/^(\\w|\\s)+$/.test(roomName)){\r\n            setRoomError(\"Room name can't contain special characters and can't be blank\");\r\n            return;\r\n        }\r\n        let room = await api(\"rooms\", \"POST\", {\r\n            name: roomName,\r\n            password: password\r\n        });\r\n        if (room.error) {\r\n            setRoomError(\"A room with the same name already exists, try another one\")\r\n        } else {\r\n            history.push(`/joinroom/${room.link}`, room);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    Welcome to Pokemon Go drafter, the definitive tool to create a draft tournament with your friends.\r\n                </h3>\r\n                <p class=\"explanation\">\r\n                    Choose a room name and a room password, share the link and the password with friends and start drafting.\r\n                </p>\r\n                <form onSubmit={createRoom}>\r\n                    <input placeholder=\"Room Name\" type=\"text\" value={roomName} onChange={handleRoomChange} />\r\n                    {roomError != \"\" && <div className=\"error\">\r\n                        {roomError}\r\n                    </div>}\r\n                    <input placeholder=\"Room Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    {passwordError != \"\" && <div className=\"error\">\r\n                        {passwordError}\r\n                    </div>}\r\n                    <button type=\"submit\">Create Room</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst RoomContext = createContext(null);\r\nconst UpdateRoomContext = createContext(null);\r\n\r\nconst useRoom=()=>{\r\n    return useContext(RoomContext);\r\n}\r\n\r\nconst useSetRoom=()=>{\r\n    return useContext(UpdateRoomContext);\r\n}\r\n\r\nconst RoomContextProvider = ({ children }) => {\r\n    const [room, setRoom] = useState(null);\r\n    return (\r\n        <RoomContext.Provider value={room}>\r\n            <UpdateRoomContext.Provider value={setRoom}>\r\n                {children}\r\n            </UpdateRoomContext.Provider>\r\n        </RoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RoomContextProvider;\r\nexport { RoomContext, useRoom, useSetRoom };","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport { useSetRoom } from './RoomContext';\r\n\r\nconst SocketContext = createContext(null);\r\nconst UpdateSocketContext = createContext(null);\r\n\r\nconst useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nconst useSetSocket = () => {\r\n    return useContext(UpdateSocketContext);\r\n}\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState(window.io());\r\n    const setRoom=useSetRoom();\r\n    useEffect(() => {\r\n        socket.on(\"updateRoom\", room => {\r\n            setRoom(room);\r\n        });\r\n    }, [setRoom]);\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            <UpdateSocketContext.Provider value={setSocket}>\r\n                {socket && children}\r\n            </UpdateSocketContext.Provider>\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SocketContextProvider;\r\nexport { SocketContext, useSocket, useSetSocket };","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport useApi from '../hooks/useApi';\r\n\r\nconst TYPES = [\"bug\", \"dark\", \"dragon\", \"electric\", \"fairy\", \"fighting\", \"fire\", \"flying\", \"ghost\", \"grass\", \"ground\", \"ice\", \"normal\", \"poison\", \"psychic\", \"rock\", \"steel\", \"water\"];\r\n\r\nconst notificationSound = new Audio(\"../notification.mp3\");\r\n\r\nconst Room = props => {\r\n    const { link } = useParams();\r\n    const room = useRoom();\r\n    const setRoom = useSetRoom();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const socket = useSocket();\r\n    const api = useApi();\r\n    const [username, setUsername] = useState(location.state);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const handleSearchQueryChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n    const [rounds, setRounds] = useState(6);\r\n    const [banRounds, setBanRounds] = useState(0);\r\n    const handleRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 1);\r\n        setBans([...new Array((banRounds + val))].map(elem => false));\r\n        setRounds(val);\r\n    }, [banRounds]);\r\n    const handleBanRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 0);\r\n        setBans([...new Array((rounds + val))].map(elem => false));\r\n        setBanRounds(val);\r\n    }, [rounds]);\r\n    const banRef = useRef();\r\n    const [bans, setBans] = useState([false, false, false, false, false, false]);\r\n    const handleCheckboxes = (e) => {\r\n        setBans([...banRef.current.querySelectorAll(\"input\")].map(elem => elem.checked));\r\n    }\r\n    const [selectedLeague, setSelectedLeague] = useState(\"1500\");\r\n    const handleSelectedLeague = (e) => {\r\n        setSelectedLeague(e.target.value);\r\n    };\r\n    const [pvpokeRankings, setPvpokeRankings] = useState(null);\r\n    const pickPokemon = useCallback((e) => {\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (chooser.username.toLowerCase() != username.toLowerCase()) {\r\n            return;\r\n        }\r\n        let selected = e.target.dataset.id;\r\n        let name = e.target.dataset.name;\r\n        if (window.confirm(`Do you want to select ${name}?`)) {\r\n            if (room.choosed_list.indexOf(selected) != -1) {\r\n                alert(\"This pokemon was already selected.\");\r\n            } else {\r\n                let newPick = {\r\n                    room_link: link,\r\n                    chooser,\r\n                    pick: name,\r\n                    pick_id: selected\r\n                }\r\n                setSearchQuery(\"\");\r\n                socket.emit(\"pick\", newPick);\r\n            }\r\n        }\r\n    }, [room, socket]);\r\n    const startDraft = useCallback(() => {\r\n        if (window.confirm(\"Are you sure you want to start the draft? No other person will be able to join after the draft is started.\")) {\r\n            socket.emit(\"startDraft\", { room_link: link, bans, league: selectedLeague });\r\n        }\r\n    }, [socket, bans, selectedLeague, link])\r\n    const checkHide = useCallback((pick) => {\r\n        const picked = room.choosed_list.indexOf(pick.speciesId) == -1;\r\n        const mode = searchQuery.charAt(0);\r\n        let searched = pick.speciesId.replaceAll(\"_\", \" \").toLowerCase().includes(searchQuery.toLowerCase());\r\n        if (TYPES.indexOf(searchQuery) != -1) {\r\n            searched = pick.types.reduce((accumulator, element) => accumulator || element.toLowerCase() == searchQuery.toLowerCase(), false)\r\n        }\r\n        if (mode == \"@\") {\r\n            let species = searchQuery.substr(1);\r\n            if (TYPES.indexOf(species) == -1) {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.moveId.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n            } else {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.type.toLowerCase()).reduce((accumulator, element) => accumulator || element == species, false);\r\n            }\r\n        } else if (mode == \"-\") {\r\n            let species = searchQuery.substr(1);\r\n            searched = Object.values(pick.matchups).flatMap(matchup => matchup).map(matchup => matchup.opponent.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n        }\r\n        return picked && searched;\r\n    }, [searchQuery, room]);\r\n    const [isInfoPopupOpened, setIsInfoPopupOpened] = useState(false);\r\n    const togglePopup = () => {\r\n        setIsInfoPopupOpened(prev => !prev);\r\n    }\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [chatMessage, setChatMessage] = useState(\"\");\r\n    const toggleChat = () => {\r\n        setIsChatOpen(prev => !prev);\r\n    }\r\n    const [chat, setChat] = useState([]);\r\n    const chatRef=useRef();\r\n    const sendChat=useCallback((e)=>{\r\n        e.preventDefault();\r\n        socket.emit(\"chatMsg\", {\r\n            username: username,\r\n            msg: chatMessage,\r\n            room_link: link\r\n        });\r\n        setChatMessage(\"\");\r\n    },[socket, username, chatMessage, link]);\r\n    useEffect(() => {\r\n        if (room == null) {\r\n            history.push(`/joinroom/${link}`);\r\n        } else {\r\n            if (!pvpokeRankings) {\r\n                const getPvpokeRankingsAsync = async () => {\r\n                    if (!room?.league) {\r\n                        return;\r\n                    }\r\n                    let res = await api(`rankings/${room.league}`, \"GET\");\r\n                    setPvpokeRankings(res);\r\n                };\r\n                getPvpokeRankingsAsync();\r\n            }\r\n            if (room?.started) {\r\n                if (room?.players?.find(player => player.pick_order == room.choosing)?.username?.toLowerCase() == username?.toLowerCase()) {\r\n                    notificationSound.play();\r\n                }\r\n                if ((\"Notification\" in window) && Notification.permission !== \"granted\") {\r\n                    Notification.requestPermission();\r\n                }\r\n                if ((\"Notification\" in window) && Notification.permission === \"granted\") {\r\n                    if (room?.players?.find(player => player.pick_order == room.choosing)?.username?.toLowerCase() == username?.toLowerCase()) {\r\n                        try {\r\n                            new Notification(\"It's your turn\", { body: `Hey ${username} it's your turn to pick for the draft ${room.name}` });\r\n                        } catch (e) {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [room]);\r\n    useEffect(()=>{\r\n        if(room){\r\n            socket.on(\"updateChat\", chat => {\r\n                let scrolledDown=chatRef.current.scrollHeight-chatRef.current.clientHeight==chatRef.current.scrollTop;\r\n                setChat(chat);\r\n                if(scrolledDown){\r\n                    chatRef.current.scrollTop=chatRef.current.scrollHeight-chatRef.current.clientHeight;\r\n                }\r\n            })\r\n        }\r\n    },[room, socket, setChat, chatRef]);\r\n    const chatTitleRef=useRef();\r\n    const animationNewChat=useCallback(()=>{\r\n        if(chatTitleRef.current){\r\n            if(!isChatOpen){\r\n                chatTitleRef.current.classList.add(\"new-msg\");\r\n                chatTitleRef.current.addEventListener(\"animationend\", ()=>{\r\n                    chatTitleRef.current.classList.remove(\"new-msg\");\r\n                })\r\n            }\r\n        }\r\n    },\r\n    [isChatOpen, chatTitleRef]);\r\n    useEffect(animationNewChat,[chat]);\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className={`container titled room-container ${Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length && \"finished\"}`} data-title={room.name}>\r\n                {\r\n                    Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length && \"finished\"\r\n                    &&\r\n                    <div className=\"ended\">\r\n                        The drafting is over...have a good tournament!\r\n                    </div>\r\n                }\r\n                <div className=\"container-element playerlist\">\r\n                    <ul>\r\n                        {\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <li className={player.online ? \"online\" : \"\"} key={player.username}>\r\n                                        <span>{player.username}</span>\r\n                                        <hr />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"container-element teams\">\r\n                    {\r\n                        room?.started ?\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <div className={`player-team titled ${room.players.find(player => player.pick_order == room.choosing).username == player.username ? \"choosing\" : \"\"}`} data-title={player.username}>\r\n                                        {\r\n                                            player.team.map((pokemon, index) => {\r\n                                                return (\r\n                                                    <div className={`pick ${room.ban_rounds[index] ? \"ban\" : \"\"}`} style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pokemon.pick_id.replace(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) :\r\n                            <h2>Everyone's team will be shown here as soon as the draft starts!</h2>\r\n                    }\r\n                </div>\r\n                <div className=\"container-element commands\">\r\n                    {\r\n                        room?.started ?\r\n                            <>\r\n                                <div className={`chooser ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() == username.toLowerCase() ? \"your-turn\" : \"\"}`}>\r\n                                    Chooser: {room && room.players.find(player => player.pick_order == room.choosing).username}\r\n                                </div>\r\n                                {\r\n                                    room.ban_rounds[Math.floor(room.choosed_list.length / room.players.length)] &&\r\n                                    <div className=\"warning\">\r\n                                        <i className=\"material-icons\">warning</i> banning round.\r\n                                    </div>\r\n                                }\r\n                                <div>\r\n\r\n                                </div>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                    <input className=\"searchBox\" placeholder=\"Search...\" type=\"text\" value={searchQuery} onChange={handleSearchQueryChange} />\r\n                                    <i className=\"material-icons info\" onClick={togglePopup}>info</i>\r\n                                </div>\r\n                                <div className=\"picks\">\r\n                                    {\r\n                                        pvpokeRankings ?\r\n                                            pvpokeRankings.map(pick => {\r\n                                                return (\r\n                                                    <div\r\n                                                        className={`pick ${checkHide(pick) ? \"\" : \"hidden\"} ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() != username.toLowerCase() ? \"disabled\" : \"\"}`}\r\n                                                        style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pick.speciesId.replaceAll(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}\r\n                                                        data-id={pick.speciesId}\r\n                                                        data-name={pick.speciesName}\r\n                                                        onClick={pickPokemon}\r\n                                                    >\r\n                                                    </div>\r\n                                                );\r\n                                            })\r\n                                            :\r\n                                            <div className=\"loadingContainer\">\r\n                                                <div className=\"loading\"></div>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </> :\r\n                            <div>\r\n                                {\r\n                                    room.players.find(player => player.username.toLowerCase() == username.toLowerCase()).host ?\r\n                                        <div className=\"options\">\r\n                                            <label>Rounds:</label>\r\n                                            <input type=\"number\" min=\"1\" value={rounds} onChange={handleRounds} />\r\n                                            <label>Ban:</label>\r\n                                            <input type=\"number\" min=\"0\" value={banRounds} onChange={handleBanRounds} />\r\n                                            {\r\n                                                banRounds > 0 && (\r\n                                                    <div style={{ width: \"100%\" }}>\r\n                                                        Rounds to ban:\r\n                                                        <div ref={banRef} className=\"bans\" onClick={handleCheckboxes}>\r\n                                                            {\r\n                                                                bans.map((ban, i) => {\r\n                                                                    return (\r\n                                                                        <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\", alignItems: \"center\" }}>\r\n                                                                            <span>{(i + 1)}</span>\r\n                                                                            <input disabled={bans.filter(Boolean).length == banRounds && !ban} checked={ban} type=\"checkbox\"></input>\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            <label>League:</label>\r\n                                            <select value={selectedLeague} onChange={handleSelectedLeague}>\r\n                                                <option value=\"1500\">Great League</option>\r\n                                                <option value=\"2500\">Ultra League</option>\r\n                                                <option value=\"10000\">Master League</option>\r\n                                            </select> <br />\r\n                                            <button className=\"lighter\" onClick={startDraft}>Start Draft</button>\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            The host <span style={{ fontWeight: \"bold\" }}>{room.players.find(player => player.host).username}</span> hasn't started the draft yet.\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-container\">\r\n                <div ref={chatTitleRef} className=\"chat-title\" onClick={toggleChat}>Chat <i className=\"material-icons\">close</i></div>\r\n                <div className={`chat-and-commands ${isChatOpen ? \"\" : \"chat-closed\"}`}>\r\n                    <div ref={chatRef} className=\"chat\">\r\n                        {\r\n                            chat.map(msg => {\r\n                                return (\r\n                                    <div className={`chat-msg ${msg.author.toLowerCase() == username.toLowerCase() ? \"personal\": \"\"}`}>\r\n                                        <div className=\"chat-author\">\r\n                                            {msg.author}\r\n                                        </div>\r\n                                        <div className=\"chat-content\">\r\n                                            {msg.msg}\r\n                                        </div>\r\n                                        <div className=\"chat-eta\">\r\n                                            {msg.eta}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"chat-commands\">\r\n                        <form onSubmit={sendChat}>\r\n                            <input value={chatMessage} onChange={(e)=> setChatMessage(e.target.value)}/>\r\n                            <button disabled={!chatMessage} type=\"submit\"><i className=\"material-icons\">send</i></button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div onClick={togglePopup} className={`info-popup ${isInfoPopupOpened ? \"\" : \"closed\"}`}>\r\n                <ul>\r\n                    <li>Type <b><i>pokemonname</i></b> to list a pokémon with that name</li>\r\n                    <li>Type <b><i>type</i></b> to list pokémon with that type</li>\r\n                    <li>Type <b><i>@move</i></b> to list pokémon with that move</li>\r\n                    <li>Type <b><i>@type</i></b> to list pokémon with that move type</li>\r\n                    <li>Type <b><i>-pokemonname</i></b> to list counters for that pokémon</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Room;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext'\r\nimport useApi from '../hooks/useApi'\r\n\r\nconst JoinRoom = props => {\r\n    const { link } = useParams();\r\n    const icon = useRef();\r\n    const location = useLocation();\r\n    const [room, setRoom] = useState(null);\r\n    const api = useApi();\r\n    const socket = useSocket();\r\n    const [username, setUsername] = useState(\"\");\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomPassword, setRoomPassword] = useState(\"\");\r\n    const handleRoomPasswordChange = (e) => {\r\n        setRoomPassword(e.target.value);\r\n    };\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [roomPasswordError, setRoomPasswordError] = useState(\"\");\r\n    const history = useHistory();\r\n    const globalRoom = useRoom();\r\n    const sha256 = async (message) => {\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(message);\r\n        const hash = await crypto.subtle.digest('SHA-256', data);\r\n        let binary = '';\r\n        const bytes = new Uint8Array(hash);\r\n        const len = bytes.byteLength;\r\n        for (let i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return btoa(binary);\r\n    }\r\n    const copyLink = async () => {\r\n        await navigator.clipboard.writeText(`${window.location.href}`);\r\n        icon.current.classList.add(\"copied\");\r\n    }\r\n    const joinRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setUsernameError(\"\");\r\n        setRoomPasswordError(\"\");\r\n        if (await sha256(roomPassword) != room.password) {\r\n            setRoomPasswordError(\"Wrong room Password\");\r\n            return;\r\n        }\r\n        if (!/^\\w+$/.test(username)) {\r\n            setUsernameError(\"Username can't contain spaces or special characters and can't be blank\");\r\n            return;\r\n        }\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        socket.emit(\"joinRoom\", { username, password, room: link })\r\n    };\r\n    useEffect(() => {\r\n        const getRoomAsync = async () => {\r\n            let room = await api(`rooms/${link}`, \"GET\");\r\n            setRoom(room);\r\n        };\r\n        if (location.state) {\r\n            setRoom(location.state);\r\n        } else {\r\n            getRoomAsync();\r\n        }\r\n        socket.on(\"error\", message => {\r\n            if (message == \"Wrong password\") {\r\n                setPasswordError(\"Wrong password\")\r\n            } else {\r\n                setRoomPasswordError(message);\r\n            }\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (globalRoom != null) {\r\n            history.push(`/room/${globalRoom.link}`, username);\r\n        }\r\n    }, [globalRoom])\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    {!(room.ok === false) ? `Joining room ${room.name}` : `No room with name ${link}`}\r\n                </h3>\r\n                {!(room.ok === false) && (\r\n                    <>\r\n                        <p className=\"explanation\">\r\n                            Choose your Username and Password, you'll need them to come back later!\r\n                        </p>\r\n                        <form onSubmit={joinRoom}>\r\n                            <input placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                            {usernameError != \"\" && <div className=\"error\">\r\n                                {usernameError}\r\n                            </div>}\r\n                            <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                            {passwordError != \"\" && <div className=\"error\">\r\n                                {passwordError}\r\n                            </div>}\r\n                            <p className=\"explanation\">\r\n                                Share the following link and the room password with your friends to let them join the draft!\r\n                            <code class=\"share-link\" onClick={copyLink}>\r\n                                    <span className=\"link\">\r\n                                        {window.location.href}\r\n                                    </span>\r\n                                    <i ref={icon} class=\"material-icons right\">content_copy</i>\r\n                                </code>\r\n                            </p>\r\n                            <input placeholder=\"Room Password\" type=\"password\" value={roomPassword} onChange={handleRoomPasswordChange} />\r\n                            {roomPasswordError != \"\" && <div className=\"error\">\r\n                                {roomPasswordError}\r\n                            </div>}\r\n                            <button type=\"submit\">Join</button>\r\n                        </form>\r\n                    </>\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JoinRoom;","import './App.css';\nimport { Home, Room, JoinRoom } from './views'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}>\n        </Route>\n        <Route path=\"/room/:link\" exact component={Room}>\n        </Route>\n        <Route path=\"/joinroom/:link\" exact component={JoinRoom}>\n        </Route>\n        <Route path=\"/test\" exact>\n          <div>Test</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SocketContextProvider from './contexts/SocketContext'\nimport RoomContextProvider from './contexts/RoomContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoomContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </RoomContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}