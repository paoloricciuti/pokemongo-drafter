{"version":3,"sources":["components/Footer.js","components/Logo.js","components/Menu.js","hooks/useApi.js","views/Home.js","components/PokemonChooser.js","contexts/RoomContext.js","contexts/SocketContext.js","views/Room.js","views/JoinRoom.js","App.js","index.js"],"names":["Footer","props","className","href","target","style","color","Logo","backgroundImage","Menu","useState","open","setOpen","onClick","prev","class","useApi","endpoint","method","a","body","isJson","baseUrl","headers","Headers","append","options","JSON","stringify","FormData","queryParameters","qp","URLSearchParams","Object","entries","forEach","param","toString","fetch","res","json","ok","Home","roomName","setRoomName","password","setPassword","roomError","setRoomError","passwordError","setPasswordError","api","history","useHistory","createRoom","e","preventDefault","test","name","room","error","push","link","onSubmit","placeholder","type","value","onChange","PokemonChooser","pvpokeRankings","checkHide","pickPokemon","map","pick","speciesId","replaceAll","replace","data-id","data-name","speciesName","RoomContext","createContext","UpdateRoomContext","useRoom","useContext","useSetRoom","RoomContextProvider","children","setRoom","Provider","SocketContext","UpdateSocketContext","useSocket","SocketContextProvider","window","io","socket","setSocket","useEffect","on","TYPES","TYPE_COLORS","notificationSound","Audio","Room","useParams","location","useLocation","state","username","searchQuery","setSearchQuery","searchQuerySubstitute","setSearchQuerySubstitute","rounds","setRounds","banRounds","setBanRounds","handleRounds","useCallback","val","Math","max","setBans","Array","elem","handleBanRounds","banRef","useRef","bans","selectedLeague","setSelectedLeague","setPvpokeRankings","selectedPokemon","setSelectedPokemon","players","find","player","pick_order","choosing","toLowerCase","selected","dataset","id","choosed_list","indexOf","alert","substituting","setSubstituting","substitutingPick","setSubstitutingPick","assignSubstitute","confirm","chooser","newPick","room_link","pick_id","substitute","emit","doSubstitution","selectPokemon","subsitutePokemon","startDraft","league","checkHideSubstitute","picked","mode","charAt","searched","includes","types","reduce","accumulator","element","species","substr","values","moves","flatMap","move","moveId","matchups","matchup","opponent","isInfoPopupOpened","setIsInfoPopupOpened","togglePopup","isChatOpen","setIsChatOpen","chatMessage","setChatMessage","chat","setChat","chatRef","sendChat","msg","getPvpokeRankingsAsync","started","floor","length","ban_rounds","play","Notification","permission","requestPermission","console","log","scrolledDown","current","scrollHeight","clientHeight","scrollTop","chatTitleRef","animationNewChat","classList","add","addEventListener","remove","data-title","online","team","pokemon","index","chooserUsername","host","position","min","width","ref","querySelectorAll","checked","ban","i","display","flexDirection","justifyContent","alignItems","disabled","filter","Boolean","fontWeight","date","Date","eta","setHours","getHours","getTimezoneOffset","author","String","padStart","getMinutes","contains","stats","atk","def","hp","fastMoves","fast","background","red","green","blue","chargedMoves","charge","JoinRoom","icon","setUsername","roomPassword","setRoomPassword","usernameError","setUsernameError","roomPasswordError","setRoomPasswordError","globalRoom","sha256","message","encoder","TextEncoder","data","encode","crypto","subtle","digest","hash","binary","bytes","Uint8Array","len","byteLength","fromCharCode","btoa","copyLink","navigator","clipboard","writeText","joinRoom","joinAsSpectator","getRoomAsync","fontStyle","marginTop","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac9b84a4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = props => {\r\nreturn (\r\n    <div className=\"footer\">\r\n        <a href=\"https://twitter.com/pogodrafter\" target=\"_blank\"><i style={{color: \"#1DA1F2\"}} className=\"fa fa-twitter\"></i> Follow me on Twitter @pogodrafter for questions and suggestions</a>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Logo = props => {\r\n    return (\r\n        <div style={{ backgroundImage: 'url(../pogodrafter.png)' }} className=\"logo\">\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Logo;","import React, { useState } from 'react';\r\n\r\nconst Menu = props => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <div onClick={() => { setOpen(prev => !prev) }} className=\"articlesWrapper\">\r\n            <div className={`articles ${open ? \"openArticles\": \"\"}`}>\r\n                <i class=\"material-icons menu-icon\">article</i>\r\n                <a href=\"/articles\">Articles</a>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst useApi = () => {\r\n    const returnFunction = async (endpoint, method, body = null, isJson=true) => {\r\n        const baseUrl = \"/api/\";\r\n        let headers = new Headers();\r\n        if(isJson){\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        let options = {\r\n            method,\r\n            body: body != null && method != \"GET\" ? JSON.stringify(body) : null,\r\n            headers\r\n        }\r\n        if(body instanceof FormData){\r\n            options.body=body;\r\n        }\r\n        let queryParameters = \"\";\r\n        if (method == \"GET\" && body!=null) {\r\n            let qp = new URLSearchParams();\r\n            Object.entries(body).forEach((param) => {\r\n                qp.append(param[0], param[1]);\r\n            });\r\n            queryParameters = `?${qp.toString()}`;\r\n        }\r\n        let res = await fetch(`${baseUrl}${endpoint}${queryParameters}`, options);\r\n        let json;\r\n        try {\r\n            json = await res.json();\r\n        }catch(e){\r\n            json={\r\n                ok: false\r\n            }\r\n        }\r\n        return json;\r\n    };\r\n    return returnFunction;\r\n};\r\n\r\nexport default useApi;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Logo';\r\nimport Menu from '../components/Menu';\r\nimport useApi from '../hooks/useApi';\r\nimport \"./Home.css\";\r\n\r\nconst Home = props => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const handleRoomChange = (e) => {\r\n        setRoomName(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomError, setRoomError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const api = useApi();\r\n    const history= useHistory();\r\n    const createRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setRoomError(\"\");\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        if(!/^(\\w|\\s)+$/.test(roomName)){\r\n            setRoomError(\"Room name can't contain special characters and can't be blank\");\r\n            return;\r\n        }\r\n        let room = await api(\"rooms\", \"POST\", {\r\n            name: roomName,\r\n            password: password\r\n        });\r\n        if (room.error) {\r\n            setRoomError(\"A room with the same name already exists, try another one\")\r\n        } else {\r\n            history.push(`/joinroom/${room.link}`, {room, password});\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <Logo />\r\n                <Footer />\r\n                <Menu />\r\n                <h3>\r\n                    Welcome to Pokemon Go drafter, the definitive tool to create a draft tournament with your friends.\r\n                </h3>\r\n                <p class=\"explanation\">\r\n                    Choose a room name and a room password, share the link and the password with friends and start drafting.\r\n                </p>\r\n                <form onSubmit={createRoom}>\r\n                    <input placeholder=\"Room Name\" type=\"text\" value={roomName} onChange={handleRoomChange} />\r\n                    {roomError != \"\" && <div className=\"error\">\r\n                        {roomError}\r\n                    </div>}\r\n                    <input placeholder=\"Room Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    {passwordError != \"\" && <div className=\"error\">\r\n                        {passwordError}\r\n                    </div>}\r\n                    <button type=\"submit\">Create Room</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst PokemonChooser = ({pvpokeRankings, checkHide, pickPokemon}) => {\r\n    return (\r\n        <div className=\"picks\">\r\n            {\r\n                pvpokeRankings ?\r\n                    pvpokeRankings.map(pick => {\r\n                        return (\r\n                            <div\r\n                                className={`pick ${checkHide(pick) ? \"\" : \"hidden\"}`}\r\n                                style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pick.speciesId.replaceAll(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}\r\n                                data-id={pick.speciesId}\r\n                                data-name={pick.speciesName}\r\n                                onClick={pickPokemon}\r\n                            >\r\n                            </div>\r\n                        );\r\n                    })\r\n                    :\r\n                    <div className=\"loadingContainer\">\r\n                        <div className=\"loading\"></div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PokemonChooser;","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst RoomContext = createContext(null);\r\nconst UpdateRoomContext = createContext(null);\r\n\r\nconst useRoom=()=>{\r\n    return useContext(RoomContext);\r\n}\r\n\r\nconst useSetRoom=()=>{\r\n    return useContext(UpdateRoomContext);\r\n}\r\n\r\nconst RoomContextProvider = ({ children }) => {\r\n    const [room, setRoom] = useState(null);\r\n    return (\r\n        <RoomContext.Provider value={room}>\r\n            <UpdateRoomContext.Provider value={setRoom}>\r\n                {children}\r\n            </UpdateRoomContext.Provider>\r\n        </RoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RoomContextProvider;\r\nexport { RoomContext, useRoom, useSetRoom };","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport { useSetRoom } from './RoomContext';\r\n\r\nconst SocketContext = createContext(null);\r\nconst UpdateSocketContext = createContext(null);\r\n\r\nconst useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nconst useSetSocket = () => {\r\n    return useContext(UpdateSocketContext);\r\n}\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState(window.io());\r\n    const setRoom=useSetRoom();\r\n    useEffect(() => {\r\n        socket.on(\"updateRoom\", room => {\r\n            setRoom(room);\r\n        });\r\n    }, [setRoom]);\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            <UpdateSocketContext.Provider value={setSocket}>\r\n                {socket && children}\r\n            </UpdateSocketContext.Provider>\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SocketContextProvider;\r\nexport { SocketContext, useSocket, useSetSocket };","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport PokemonChooser from '../components/PokemonChooser';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport useApi from '../hooks/useApi';\r\n\r\nconst TYPES = [\"bug\", \"dark\", \"dragon\", \"electric\", \"fairy\", \"fighting\", \"fire\", \"flying\", \"ghost\", \"grass\", \"ground\", \"ice\", \"normal\", \"poison\", \"psychic\", \"rock\", \"steel\", \"water\"];\r\n\r\nconst TYPE_COLORS = {\r\n    \"ground\": {\r\n        \"red\": 215,\r\n        \"green\": 141,\r\n        \"blue\": 94\r\n    },\r\n    \"ghost\": {\r\n        \"red\": 97,\r\n        \"green\": 109,\r\n        \"blue\": 191\r\n    },\r\n    \"normal\": {\r\n        \"red\": 146,\r\n        \"green\": 153,\r\n        \"blue\": 161\r\n    },\r\n    \"dark\": {\r\n        \"red\": 101,\r\n        \"green\": 103,\r\n        \"blue\": 118\r\n    },\r\n    \"water\": {\r\n        \"red\": 94,\r\n        \"green\": 170,\r\n        \"blue\": 220\r\n    },\r\n    \"fighting\": {\r\n        \"red\": 215,\r\n        \"green\": 64,\r\n        \"blue\": 95\r\n    },\r\n    \"electric\": {\r\n        \"red\": 247,\r\n        \"green\": 218,\r\n        \"blue\": 92\r\n    },\r\n    \"flying\": {\r\n        \"red\": 155,\r\n        \"green\": 179,\r\n        \"blue\": 225\r\n    },\r\n    \"poison\": {\r\n        \"red\": 185,\r\n        \"green\": 98,\r\n        \"blue\": 205\r\n    },\r\n    \"bug\": {\r\n        \"red\": 153,\r\n        \"green\": 197,\r\n        \"blue\": 42\r\n    },\r\n    \"rock\": {\r\n        \"red\": 203,\r\n        \"green\": 189,\r\n        \"blue\": 142\r\n    },\r\n    \"fire\": {\r\n        \"red\": 253,\r\n        \"green\": 161,\r\n        \"blue\": 88\r\n    },\r\n    \"grass\": {\r\n        \"red\": 91,\r\n        \"green\": 191,\r\n        \"blue\": 103\r\n    },\r\n    \"steel\": {\r\n        \"red\": 82,\r\n        \"green\": 152,\r\n        \"blue\": 164\r\n    },\r\n    \"ice\": {\r\n        \"red\": 124,\r\n        \"green\": 210,\r\n        \"blue\": 199\r\n    },\r\n    \"psychic\": {\r\n        \"red\": 250,\r\n        \"green\": 135,\r\n        \"blue\": 132\r\n    },\r\n    \"dragon\": {\r\n        \"red\": 11,\r\n        \"green\": 110,\r\n        \"blue\": 191\r\n    },\r\n    \"fairy\": {\r\n        \"red\": 255,\r\n        \"green\": 175,\r\n        \"blue\": 238\r\n    }\r\n};\r\n\r\nconst notificationSound = new Audio(\"../notification.mp3\");\r\n\r\nconst Room = props => {\r\n    const { link } = useParams();\r\n    const room = useRoom();\r\n    const setRoom = useSetRoom();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const socket = useSocket();\r\n    const api = useApi();\r\n    const [username, setUsername] = useState(location.state);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const handleSearchQueryChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n    const [searchQuerySubstitute, setSearchQuerySubstitute] = useState(\"\");\r\n    const handleSearchQuerySubstituteChange = (e) => {\r\n        setSearchQuerySubstitute(e.target.value);\r\n    };\r\n    const [rounds, setRounds] = useState(6);\r\n    const [banRounds, setBanRounds] = useState(0);\r\n    const handleRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 1);\r\n        setBans([...new Array((banRounds + val))].map(elem => false));\r\n        setRounds(val);\r\n    }, [banRounds]);\r\n    const handleBanRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 0);\r\n        setBans([...new Array((rounds + val))].map(elem => false));\r\n        setBanRounds(val);\r\n    }, [rounds]);\r\n    const banRef = useRef();\r\n    const [bans, setBans] = useState([false, false, false, false, false, false]);\r\n    const handleCheckboxes = (e) => {\r\n        setBans([...banRef.current.querySelectorAll(\"input\")].map(elem => elem.checked));\r\n    }\r\n    const [selectedLeague, setSelectedLeague] = useState(\"1500\");\r\n    const handleSelectedLeague = (e) => {\r\n        setSelectedLeague(e.target.value);\r\n    };\r\n    const [pvpokeRankings, setPvpokeRankings] = useState(null);\r\n    const [selectedPokemon, setSelectedPokemon] = useState(null);\r\n    const pickPokemon = useCallback((e) => {\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (chooser.username.toLowerCase() != username.toLowerCase()) {\r\n            return;\r\n        }\r\n        let selected = e.target.dataset.id;\r\n        if (room.choosed_list.indexOf(selected) != -1) {\r\n            alert(\"This pokemon was already selected.\");\r\n            return;\r\n        }\r\n        setSelectedPokemon(pvpokeRankings.find(pick => pick.speciesId == selected));\r\n    }, [room, username, pvpokeRankings]);\r\n\r\n    const [substituting, setSubstituting] = useState(false);\r\n    const [substitutingPick, setSubstitutingPick] = useState(null);\r\n    const assignSubstitute = useCallback(() => {\r\n        const confirm = window.confirm(\"Are you sure you want to assign the substitute to the current chooser? The draft will go on and it will later be able to substitute the doll with a Pokemon on his turn.\");\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (!confirm) return;\r\n        let newPick = {\r\n            room_link: link,\r\n            chooser,\r\n            pick: \"Substitute\",\r\n            pick_id: \"substitute\",\r\n            substitute: true\r\n        }\r\n        socket.emit(\"pick\", newPick);\r\n    }, [socket, room]);\r\n    const doSubstitution = useCallback((e) => {\r\n        setSubstituting(true);\r\n        setSubstitutingPick(e.target.dataset.id);\r\n    }, [socket, room])\r\n    const selectPokemon = useCallback(() => {\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (chooser.username.toLowerCase() != username.toLowerCase()) {\r\n            return;\r\n        }\r\n        if (room.choosed_list.indexOf(selectedPokemon.speciesId) != -1) {\r\n            alert(\"This pokemon was already selected.\");\r\n        } else {\r\n            let newPick = {\r\n                room_link: link,\r\n                chooser,\r\n                pick: selectedPokemon.speciesName,\r\n                pick_id: selectedPokemon.speciesId\r\n            }\r\n            setSearchQuery(\"\");\r\n            socket.emit(\"pick\", newPick);\r\n            setSelectedPokemon(null);\r\n        }\r\n    }, [room, socket, selectedPokemon, username]);\r\n    const subsitutePokemon = useCallback(() => {\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (chooser.username.toLowerCase() != username.toLowerCase()) {\r\n            return;\r\n        }\r\n        if (room.choosed_list.indexOf(selectedPokemon.speciesId) != -1) {\r\n            alert(\"This pokemon was already selected.\");\r\n        } else {\r\n            let newPick = {\r\n                room_link: link,\r\n                id: substitutingPick,\r\n                pick: selectedPokemon.speciesName,\r\n                pick_id: selectedPokemon.speciesId\r\n            }\r\n            setSearchQuery(\"\");\r\n            socket.emit(\"substitute\", newPick);\r\n            setSelectedPokemon(null);\r\n            setSubstituting(false);\r\n            setSubstitutingPick(null);\r\n        }\r\n    }, [room, socket, selectedPokemon, username, substitutingPick]);\r\n    const startDraft = useCallback(() => {\r\n        if (window.confirm(\"Are you sure you want to start the draft? No other person will be able to join after the draft is started.\")) {\r\n            socket.emit(\"startDraft\", { room_link: link, bans, league: selectedLeague });\r\n        }\r\n    }, [socket, bans, selectedLeague, link])\r\n    const checkHideSubstitute = useCallback((pick) => {\r\n        const picked = room.choosed_list.indexOf(pick.speciesId) == -1;\r\n        const mode = searchQuerySubstitute.charAt(0);\r\n        let searched = pick.speciesId.replaceAll(\"_\", \" \").toLowerCase().includes(searchQuerySubstitute.toLowerCase());\r\n        if (TYPES.indexOf(searchQuerySubstitute) != -1) {\r\n            searched = pick.types.reduce((accumulator, element) => accumulator || element.toLowerCase() == searchQuerySubstitute.toLowerCase(), false)\r\n        }\r\n        if (mode == \"@\") {\r\n            let species = searchQuerySubstitute.substr(1);\r\n            if (TYPES.indexOf(species) == -1) {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.moveId.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n            } else {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.type.toLowerCase()).reduce((accumulator, element) => accumulator || element == species, false);\r\n            }\r\n        } else if (mode == \"-\") {\r\n            let species = searchQuerySubstitute.substr(1);\r\n            searched = Object.values(pick.matchups).flatMap(matchup => matchup).map(matchup => matchup.opponent.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n        }\r\n        return picked && searched;\r\n    }, [searchQuerySubstitute, room]);\r\n\r\n    const checkHide = useCallback((pick) => {\r\n        const picked = room.choosed_list.indexOf(pick.speciesId) == -1;\r\n        const mode = searchQuery.charAt(0);\r\n        let searched = pick.speciesId.replaceAll(\"_\", \" \").toLowerCase().includes(searchQuery.toLowerCase());\r\n        if (TYPES.indexOf(searchQuery) != -1) {\r\n            searched = pick.types.reduce((accumulator, element) => accumulator || element.toLowerCase() == searchQuery.toLowerCase(), false)\r\n        }\r\n        if (mode == \"@\") {\r\n            let species = searchQuery.substr(1);\r\n            if (TYPES.indexOf(species) == -1) {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.moveId.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n            } else {\r\n                searched = Object.values(pick.moves).flatMap(move => move).map(move => move.type.toLowerCase()).reduce((accumulator, element) => accumulator || element == species, false);\r\n            }\r\n        } else if (mode == \"-\") {\r\n            let species = searchQuery.substr(1);\r\n            searched = Object.values(pick.matchups).flatMap(matchup => matchup).map(matchup => matchup.opponent.replaceAll(\"_\", \" \").toLowerCase()).reduce((accumulator, element) => accumulator || element.includes(species), false);\r\n        }\r\n        return picked && searched;\r\n    }, [searchQuery, room]);\r\n\r\n    const [isInfoPopupOpened, setIsInfoPopupOpened] = useState(false);\r\n    const togglePopup = () => {\r\n        setIsInfoPopupOpened(prev => !prev);\r\n    }\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [chatMessage, setChatMessage] = useState(\"\");\r\n    const toggleChat = () => {\r\n        setIsChatOpen(prev => !prev);\r\n    }\r\n    const [chat, setChat] = useState([]);\r\n    const chatRef = useRef();\r\n    const sendChat = useCallback((e) => {\r\n        e.preventDefault();\r\n        socket.emit(\"chatMsg\", {\r\n            username: username,\r\n            msg: chatMessage,\r\n            room_link: link\r\n        });\r\n        setChatMessage(\"\");\r\n    }, [socket, username, chatMessage, link]);\r\n    useEffect(() => {\r\n        if (room == null) {\r\n            history.push(`/joinroom/${link}`);\r\n        } else {\r\n            if (!pvpokeRankings) {\r\n                const getPvpokeRankingsAsync = async () => {\r\n                    if (!room?.league) {\r\n                        return;\r\n                    }\r\n                    let res = await api(`rankings/${room.league}`, \"GET\");\r\n                    setPvpokeRankings(res);\r\n                };\r\n                getPvpokeRankingsAsync();\r\n            }\r\n            if (room?.started) {\r\n                if (!(Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length) && room?.players?.find(player => player.pick_order == room.choosing)?.username?.toLowerCase() == username?.toLowerCase()) {\r\n                    notificationSound.play();\r\n                }\r\n                if ((\"Notification\" in window) && Notification.permission !== \"granted\") {\r\n                    Notification.requestPermission();\r\n                }\r\n                if ((\"Notification\" in window) && Notification.permission === \"granted\") {\r\n                    if (!(Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length) && room?.players?.find(player => player.pick_order == room.choosing)?.username?.toLowerCase() == username?.toLowerCase()) {\r\n                        try {\r\n                            new Notification(\"It's your turn\", { body: `Hey ${username} it's your turn to pick for the draft ${room.name}` });\r\n                        } catch (e) {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [room]);\r\n    useEffect(() => {\r\n        if (room) {\r\n            socket.on(\"updateChat\", chat => {\r\n                console.log(\"Chat updated\");\r\n                let scrolledDown = chatRef.current.scrollHeight - chatRef.current.clientHeight == chatRef.current.scrollTop;\r\n                setChat(chat);\r\n                if (scrolledDown) {\r\n                    chatRef.current.scrollTop = chatRef.current.scrollHeight - chatRef.current.clientHeight;\r\n                }\r\n            })\r\n        }\r\n    }, [room, socket, setChat, chatRef]);\r\n    const chatTitleRef = useRef();\r\n    const animationNewChat = useCallback(() => {\r\n        if (chatTitleRef.current) {\r\n            if (!isChatOpen) {\r\n                chatTitleRef.current.classList.add(\"new-msg\");\r\n                chatTitleRef.current.addEventListener(\"animationend\", () => {\r\n                    chatTitleRef.current.classList.remove(\"new-msg\");\r\n                })\r\n            }\r\n        }\r\n    },\r\n        [isChatOpen, chatTitleRef]);\r\n    useEffect(animationNewChat, [chat]);\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className={`container titled room-container ${Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length && \"finished\"}`} data-title={room.name}>\r\n                {\r\n                    Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length && \"finished\"\r\n                    &&\r\n                    <div className=\"ended\">\r\n                        The drafting is over...have a good tournament!\r\n                    </div>\r\n                }\r\n                <div className=\"container-element playerlist\">\r\n                    <ul>\r\n                        {\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <li className={player.online ? \"online\" : \"\"} key={player.username}>\r\n                                        <span>{player.username}</span>\r\n                                        <hr />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"container-element teams\">\r\n                    {\r\n                        room?.started ?\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <div className={`player-team titled ${!(Math.floor(room.choosed_list.length / room.players.length) >= room.ban_rounds.length) && room.players.find(player => player.pick_order == room.choosing).username == player.username ? \"choosing\" : \"\"} ${room.ban_rounds[Math.floor(room.choosed_list.length / room.players.length)] ? \"banning\" : \"\"}`} data-title={player.username}>\r\n                                        {\r\n                                            player.team.map((pokemon, index) => {\r\n                                                const chooserUsername = room.players.find(player => player.pick_order == room.choosing).username.toLowerCase();\r\n                                                const myTurn = chooserUsername === username.toLowerCase() && chooserUsername === player.username.toLowerCase();\r\n                                                const substitute = myTurn && pokemon.pick_id === \"substitute\";\r\n                                                return (\r\n                                                    <div className={`pick ${room.ban_rounds[index] ? \"ban\" : \"\"} ${substitute ? \"substitute\" : \"\"}`} onClick={substitute && doSubstitution} data-id={pokemon.id} style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pokemon.pick_id.replace(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) :\r\n                            <h2>Everyone's team will be shown here as soon as the draft starts!</h2>\r\n                    }\r\n                </div>\r\n                <div className=\"container-element commands\">\r\n                    {\r\n                        room?.started ?\r\n                            <>\r\n                                <div className={`chooser ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() == username.toLowerCase() ? \"your-turn\" : \"\"}`}>\r\n                                    Chooser: {room && room.players.find(player => player.pick_order == room.choosing).username}\r\n                                </div>\r\n                                {\r\n                                    room?.players?.find(player => player.username.toLowerCase() == username.toLowerCase())?.host ?\r\n                                        <button className=\"lighter\" onClick={assignSubstitute}>Assign substitute</button> : null\r\n                                }\r\n                                {\r\n                                    room.ban_rounds[Math.floor(room.choosed_list.length / room.players.length)] &&\r\n                                    <div className=\"warning\">\r\n                                        <i className=\"material-icons\">warning</i> banning round.\r\n                                    </div>\r\n                                }\r\n                                <div style={{ position: \"relative\" }}>\r\n                                    <input className=\"searchBox\" placeholder=\"Search...\" type=\"text\" value={searchQuery} onChange={handleSearchQueryChange} />\r\n                                    <i className=\"material-icons info\" onClick={togglePopup}>info</i>\r\n                                </div>\r\n                                <div className=\"picks\">\r\n                                    {\r\n                                        pvpokeRankings ?\r\n                                            pvpokeRankings.map(pick => {\r\n                                                return (\r\n                                                    <div\r\n                                                        className={`pick ${checkHide(pick) ? \"\" : \"hidden\"} ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() != username.toLowerCase() ? \"disabled\" : \"\"}`}\r\n                                                        style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pick.speciesId.replaceAll(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}\r\n                                                        data-id={pick.speciesId}\r\n                                                        data-name={pick.speciesName}\r\n                                                        onClick={pickPokemon}\r\n                                                    >\r\n                                                    </div>\r\n                                                );\r\n                                            })\r\n                                            :\r\n                                            <div className=\"loadingContainer\">\r\n                                                <div className=\"loading\"></div>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </> :\r\n                            <div>\r\n                                {\r\n                                    room?.players?.find(player => player.username.toLowerCase() == username.toLowerCase())?.host ?\r\n                                        <div className=\"options\">\r\n                                            <label>Rounds:</label>\r\n                                            <input type=\"number\" min=\"1\" value={rounds} onChange={handleRounds} />\r\n                                            <label>Ban:</label>\r\n                                            <input type=\"number\" min=\"0\" value={banRounds} onChange={handleBanRounds} />\r\n                                            {\r\n                                                banRounds > 0 && (\r\n                                                    <div style={{ width: \"100%\" }}>\r\n                                                        Ban columns:\r\n                                                        <div ref={banRef} className=\"bans\" onClick={handleCheckboxes}>\r\n                                                            {\r\n                                                                bans.map((ban, i) => {\r\n                                                                    return (\r\n                                                                        <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\", alignItems: \"center\" }}>\r\n                                                                            <span>{(i + 1)}</span>\r\n                                                                            <input disabled={bans.filter(Boolean).length == banRounds && !ban} checked={ban} type=\"checkbox\"></input>\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            <label>League:</label>\r\n                                            <select value={selectedLeague} onChange={handleSelectedLeague}>\r\n                                                <option value=\"1500\">Great League</option>\r\n                                                <option value=\"2500\">Ultra League</option>\r\n                                                <option value=\"10000\">Master League</option>\r\n                                            </select> <br />\r\n                                            <button className=\"lighter\" onClick={startDraft}>Start Draft</button>\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            The host <span style={{ fontWeight: \"bold\" }}>{room.players.find(player => player.host).username}</span> hasn't started the draft yet.\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {\r\n                username &&\r\n                <div className=\"chat-container\">\r\n                    <div ref={chatTitleRef} className=\"chat-title\" onClick={toggleChat}>Chat <i className=\"material-icons\">close</i></div>\r\n                    <div className={`chat-and-commands ${isChatOpen ? \"\" : \"chat-closed\"}`}>\r\n                        <div ref={chatRef} className=\"chat\">\r\n                            {\r\n                                chat.map(msg => {\r\n                                    let date = new Date(msg.eta);\r\n                                    date.setHours(date.getHours() - (new Date().getTimezoneOffset() / 60));\r\n                                    return (\r\n                                        <div className={`chat-msg ${msg.author.toLowerCase() == username.toLowerCase() ? \"personal\" : \"\"}`}>\r\n                                            <div className=\"chat-author\">\r\n                                                {msg.author}\r\n                                            </div>\r\n                                            <div className=\"chat-content\">\r\n                                                {msg.msg}\r\n                                            </div>\r\n                                            <div className=\"chat-eta\">\r\n                                                {`${String(date.getHours()).padStart(2, \"0\")}:${String(date.getMinutes()).padStart(2, \"0\")}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"chat-commands\">\r\n                            <form onSubmit={sendChat}>\r\n                                <input value={chatMessage} onChange={(e) => setChatMessage(e.target.value)} />\r\n                                <button disabled={!chatMessage} type=\"submit\"><i className=\"material-icons\">send</i></button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className={`substitute-popup ${substituting ? \"\" : \"closed\"}`}>\r\n                <div className=\"substitute-popup-picker titled\" data-title=\"Substitute\">\r\n                    <div style={{ position: \"relative\" }}>\r\n                        <input className=\"searchBox\" placeholder=\"Search...\" type=\"text\" value={searchQuerySubstitute} onChange={handleSearchQuerySubstituteChange} />\r\n                        <i className=\"material-icons info\" onClick={togglePopup}>info</i>\r\n                    </div>\r\n                    <PokemonChooser pvpokeRankings={pvpokeRankings} checkHide={checkHideSubstitute} pickPokemon={pickPokemon} />\r\n                    <button onClick={() => { setSubstituting(false) }}>Cancel</button>\r\n                </div>\r\n            </div>\r\n            <div onClick={togglePopup} className={`info-popup ${isInfoPopupOpened ? \"\" : \"closed\"}`}>\r\n                <ul>\r\n                    <li>Type <b><i>pokemonname</i></b> to list a pokémon with that name</li>\r\n                    <li>Type <b><i>type</i></b> to list pokémon with that type</li>\r\n                    <li>Type <b><i>@move</i></b> to list pokémon with that move</li>\r\n                    <li>Type <b><i>@type</i></b> to list pokémon with that move type</li>\r\n                    <li>Type <b><i>-pokemonname</i></b> to list counters for that pokémon</li>\r\n                </ul>\r\n            </div>\r\n            {\r\n                selectedPokemon &&\r\n                <div className=\"confirm-pokemon\" onClick={(e) => e.target.classList.contains(\"confirm-pokemon\") && (setSelectedPokemon(null))}>\r\n                    <div className=\"pokemon-card\">\r\n                        <div className=\"pokemon-card-img\" style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${selectedPokemon.speciesId.replaceAll(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}>\r\n                        </div>\r\n                        <div className=\"pokemon-card-name\">\r\n                            {selectedPokemon.speciesName}\r\n                        </div>\r\n                        <div className=\"pokemon-card-types\">\r\n                            {\r\n                                selectedPokemon.types.map(type => {\r\n                                    return (\r\n                                        type != \"none\" && <div style={{ backgroundImage: `url(../types/${type}.png)` }}></div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"pokemon-card-stats\">\r\n                            <div className=\"pokemon-card-stat\">\r\n                                ATK\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                DEF\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                HP\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                {selectedPokemon.stats.atk}\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                {selectedPokemon.stats.def}\r\n                            </div>\r\n                            <div className=\"pokemon-card-stat\">\r\n                                {selectedPokemon.stats.hp}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pokemon-card-moves\">\r\n                            <div className=\"pokemon-card-fasts\">\r\n                                {\r\n                                    selectedPokemon.moves.fastMoves.map(fast => {\r\n                                        return (\r\n                                            <div style={{ background: `rgb(${TYPE_COLORS[fast.type].red}, ${TYPE_COLORS[fast.type].green}, ${TYPE_COLORS[fast.type].blue})` }} className=\"pokemon-card-fast\">\r\n                                                {fast.moveId.replaceAll(\"_\", \" \")}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className=\"pokemon-card-charges\">\r\n                                {\r\n                                    selectedPokemon.moves.chargedMoves.map(charge => {\r\n                                        return (\r\n                                            <div style={{ background: `rgb(${TYPE_COLORS[charge.type].red}, ${TYPE_COLORS[charge.type].green}, ${TYPE_COLORS[charge.type].blue})` }} className=\"pokemon-card-charge\">\r\n                                                {charge.moveId.replaceAll(\"_\", \" \")}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pokemon-card-buttons\">\r\n                            <button className=\"lighter\" onClick={() => { setSelectedPokemon(null) }}>Cancel</button>\r\n                            <button className=\"lighter\" onClick={!substituting ? selectPokemon : subsitutePokemon}>{substituting ? \"Substitute\" : room.ban_rounds[Math.floor(room.choosed_list.length / room.players.length)] ? \"Ban\" : \"Select\" }</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Room;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\r\nimport Footer from '../components/Footer';\r\nimport Logo from '../components/Logo';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext'\r\nimport useApi from '../hooks/useApi'\r\n\r\nconst JoinRoom = props => {\r\n    const { link } = useParams();\r\n    const icon = useRef();\r\n    const location = useLocation();\r\n    const [room, setRoom] = useState(null);\r\n    const api = useApi();\r\n    const socket = useSocket();\r\n    const [username, setUsername] = useState(\"\");\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomPassword, setRoomPassword] = useState(location.state ? location.state.password : \"\");\r\n    const handleRoomPasswordChange = (e) => {\r\n        setRoomPassword(e.target.value);\r\n    };\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [roomPasswordError, setRoomPasswordError] = useState(\"\");\r\n    const history = useHistory();\r\n    const globalRoom = useRoom();\r\n    const sha256 = async (message) => {\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(message);\r\n        const hash = await crypto.subtle.digest('SHA-256', data);\r\n        let binary = '';\r\n        const bytes = new Uint8Array(hash);\r\n        const len = bytes.byteLength;\r\n        for (let i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return btoa(binary);\r\n    }\r\n    const copyLink = async () => {\r\n        await navigator.clipboard.writeText(`${window.location.href}`);\r\n        icon.current.classList.add(\"copied\");\r\n    }\r\n    const joinRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setUsernameError(\"\");\r\n        setRoomPasswordError(\"\");\r\n        if (await sha256(roomPassword) != room.password) {\r\n            setRoomPasswordError(\"Wrong room Password\");\r\n            return;\r\n        }\r\n        if (!/^\\w+$/.test(username)) {\r\n            setUsernameError(\"Username can't contain spaces or special characters and can't be blank\");\r\n            return;\r\n        }\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        socket.emit(\"joinRoom\", { username, password, room: link })\r\n    };\r\n    const joinAsSpectator = async () => {\r\n        setPasswordError(\"\");\r\n        setUsernameError(\"\");\r\n        setRoomPasswordError(\"\");\r\n        socket.emit(\"joinRoomSpec\", { room: link })\r\n    };\r\n    useEffect(() => {\r\n        const getRoomAsync = async () => {\r\n            let room = await api(`rooms/${link}`, \"GET\");\r\n            setRoom(room);\r\n        };\r\n        if (location.state) {\r\n            setRoom(location.state.room);\r\n        } else {\r\n            getRoomAsync();\r\n        }\r\n        socket.on(\"error\", message => {\r\n            if (message == \"Wrong password\") {\r\n                setPasswordError(\"Wrong password\")\r\n            } else {\r\n                setRoomPasswordError(message);\r\n            }\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (globalRoom != null) {\r\n            history.push(`/room/${globalRoom.link}`, username);\r\n        }\r\n    }, [globalRoom])\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container\">\r\n                <Logo />\r\n                <Footer />\r\n                <h3>\r\n                    {!(room.ok === false) ? `Joining room ${room.name}` : `No room with name ${link}`}\r\n                </h3>\r\n                {!(room.ok === false) && (\r\n                    <>\r\n                        <button type=\"button\" onClick={joinAsSpectator}>Join as Spectactor</button>\r\n                        <span style={{ fontStyle: \"italic\", display: \"block\", marginTop: 0 }}>or</span>\r\n                        <p className=\"explanation\">\r\n                            Choose your Username and Password, you'll need them to come back later!\r\n                        </p>\r\n                        <form onSubmit={joinRoom}>\r\n                            <input placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                            {usernameError != \"\" && <div className=\"error\">\r\n                                {usernameError}\r\n                            </div>}\r\n                            <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                            {passwordError != \"\" && <div className=\"error\">\r\n                                {passwordError}\r\n                            </div>}\r\n                            <p className=\"explanation\">\r\n                                Share the following link and the room password with your friends to let them join the draft!\r\n                            <code class=\"share-link\" onClick={copyLink}>\r\n                                    <span className=\"link\">\r\n                                        {window.location.href}\r\n                                    </span>\r\n                                    <i ref={icon} class=\"material-icons right\">content_copy</i>\r\n                                </code>\r\n                            </p>\r\n                            {\r\n                                !location.state &&\r\n                                <>\r\n                                    <input placeholder=\"Room Password\" type=\"password\" value={roomPassword} onChange={handleRoomPasswordChange} />\r\n                                    {roomPasswordError != \"\" && <div className=\"error\">\r\n                                        {roomPasswordError}\r\n                                    </div>}\r\n                                </>\r\n                            }\r\n                            <button type=\"submit\">Join</button>\r\n\r\n\r\n                        </form>\r\n                    </>\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JoinRoom;","import './App.css';\nimport { Home, Room, JoinRoom } from './views'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}>\n        </Route>\n        <Route path=\"/room/:link\" exact component={Room}>\n        </Route>\n        <Route path=\"/joinroom/:link\" exact component={JoinRoom}>\n        </Route>\n        <Route path=\"/test\" exact>\n          <div>Test</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SocketContextProvider from './contexts/SocketContext'\nimport RoomContextProvider from './contexts/RoomContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoomContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </RoomContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}