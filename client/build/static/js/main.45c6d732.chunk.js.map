{"version":3,"sources":["hooks/useApi.js","views/Home.js","contexts/RoomContext.js","contexts/SocketContext.js","views/Room.js","views/JoinRoom.js","App.js","index.js"],"names":["useApi","endpoint","method","a","body","isJson","baseUrl","headers","Headers","append","options","JSON","stringify","FormData","queryParameters","qp","URLSearchParams","Object","entries","forEach","param","toString","fetch","res","json","ok","Home","props","useState","roomName","setRoomName","password","setPassword","roomError","setRoomError","passwordError","setPasswordError","api","history","useHistory","createRoom","e","preventDefault","test","name","room","error","push","link","className","class","onSubmit","placeholder","type","value","onChange","target","RoomContext","createContext","UpdateRoomContext","useRoom","useContext","useSetRoom","RoomContextProvider","children","setRoom","Provider","SocketContext","UpdateSocketContext","useSocket","SocketContextProvider","window","io","socket","setSocket","useEffect","on","Room","useParams","location","useLocation","state","username","searchQuery","setSearchQuery","rounds","setRounds","banRounds","setBanRounds","handleRounds","useCallback","val","Math","max","setBans","Array","map","elem","handleBanRounds","banRef","useRef","bans","selectedLeague","setSelectedLeague","pvpokeRankings","setPvpokeRankings","pickPokemon","chooser","players","find","player","pick_order","choosing","toLowerCase","selected","dataset","id","confirm","choosed_list","indexOf","alert","newPick","room_link","pick","pick_id","emit","startDraft","league","getPvpokeRankingsAsync","data-title","online","started","team","pokemon","index","ban_rounds","style","backgroundImage","replace","floor","length","speciesId","data-id","data-name","speciesName","onClick","host","min","width","ref","current","querySelectorAll","checked","ban","i","display","flexDirection","justifyContent","alignItems","disabled","filter","Boolean","fontWeight","JoinRoom","icon","setUsername","roomPassword","setRoomPassword","usernameError","setUsernameError","roomPasswordError","setRoomPasswordError","globalRoom","sha256","message","encoder","TextEncoder","data","encode","crypto","subtle","digest","hash","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","copyLink","navigator","clipboard","writeText","classList","add","joinRoom","getRoomAsync","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAuCeA,EArCA,WAkCX,OAjCoB,uCAAG,WAAOC,EAAUC,GAAjB,2CAAAC,EAAA,6DAAyBC,EAAzB,+BAAgC,KAAMC,IAAtC,iCACbC,EAAU,QACZC,EAAU,IAAIC,QACfH,GACCE,EAAQE,OAAO,eAAgB,oBAE/BC,EAAU,CACVR,SACAE,KAAc,MAARA,GAA0B,OAAVF,EAAkBS,KAAKC,UAAUR,GAAQ,KAC/DG,WAEDH,aAAgBS,WACfH,EAAQN,KAAKA,GAEbU,EAAkB,GACR,OAAVZ,GAAyB,MAANE,IACfW,EAAK,IAAIC,gBACbC,OAAOC,QAAQd,GAAMe,SAAQ,SAACC,GAC1BL,EAAGN,OAAOW,EAAM,GAAIA,EAAM,OAE9BN,EAAe,WAAOC,EAAGM,aApBV,UAsBHC,MAAM,GAAD,OAAIhB,GAAJ,OAAcL,GAAd,OAAyBa,GAAmBJ,GAtB9C,eAsBfa,EAtBe,2BAyBFA,EAAIC,OAzBF,QAyBfA,EAzBe,0DA2BfA,EAAK,CACDC,IAAI,GA5BO,iCA+BZD,GA/BY,2DAAH,yDC8DTE,G,MA5DF,SAAAC,GAAU,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACDC,EADC,OAKcF,mBAAS,IALvB,mBAKXG,EALW,KAKDC,EALC,OASgBJ,mBAAS,IATzB,mBASXK,EATW,KASAC,EATA,OAUwBN,mBAAS,IAVjC,mBAUXO,EAVW,KAUIC,EAVJ,KAWZC,EAAMrC,IACNsC,EAASC,cACTC,EAAU,uCAAG,WAAOC,GAAP,eAAAtC,EAAA,yDACfsC,EAAEC,iBACFN,EAAiB,IACjBF,EAAa,IACG,IAAZH,EAJW,uBAKXK,EAAiB,2BALN,6BAQX,aAAaO,KAAKd,GARP,uBASXK,EAAa,iEATF,2CAYEG,EAAI,QAAS,OAAQ,CAClCO,KAAMf,EACNE,SAAUA,IAdC,SAYXc,EAZW,QAgBNC,MACLZ,EAAa,6DAEbI,EAAQS,KAAR,oBAA0BF,EAAKG,MAAQH,GAnB5B,4CAAH,sDAsBhB,OACI,qBAAKI,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oIAGA,mBAAGC,MAAM,cAAT,gHAGA,uBAAMC,SAAUX,EAAhB,UACI,uBAAOY,YAAY,YAAYC,KAAK,OAAOC,MAAOzB,EAAU0B,SA3CnD,SAACd,GACtBX,EAAYW,EAAEe,OAAOF,UA2CK,IAAbrB,GAAmB,qBAAKgB,UAAU,QAAf,SACfhB,IAEL,uBAAOmB,YAAY,WAAWC,KAAK,WAAWC,MAAOvB,EAAUwB,SA3ClD,SAACd,GAC1BT,EAAYS,EAAEe,OAAOF,UA2CS,IAAjBnB,GAAuB,qBAAKc,UAAU,QAAf,SACnBd,IAEL,wBAAQkB,KAAK,SAAb,mC,QCxDdI,EAAcC,wBAAc,MAC5BC,EAAoBD,wBAAc,MAElCE,EAAQ,WACV,OAAOC,qBAAWJ,IAGhBK,EAAW,WACb,OAAOD,qBAAWF,IAcPI,EAXa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBpC,mBAAS,MADS,mBACnCiB,EADmC,KAC7BoB,EAD6B,KAE1C,OACI,cAACR,EAAYS,SAAb,CAAsBZ,MAAOT,EAA7B,SACI,cAACc,EAAkBO,SAAnB,CAA4BZ,MAAOW,EAAnC,SACKD,OCfXG,EAAgBT,wBAAc,MAC9BU,EAAsBV,wBAAc,MAEpCW,EAAY,WACd,OAAOR,qBAAWM,IAwBPG,EAjBe,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SAAe,EAChBpC,mBAAS2C,OAAOC,MADA,mBACrCC,EADqC,KAC7BC,EAD6B,KAEtCT,EAAQH,IAMd,OALAa,qBAAU,WACNF,EAAOG,GAAG,cAAc,SAAA/B,GACpBoB,EAAQpB,QAEb,CAACoB,IAEA,cAACE,EAAcD,SAAf,CAAwBZ,MAAOmB,EAA/B,SACI,cAACL,EAAoBF,SAArB,CAA8BZ,MAAOoB,EAArC,SACKD,GAAUT,OCoLZa,EAtMF,SAAAlD,GAAU,IACXqB,EAAS8B,cAAT9B,KACFH,EAAOe,IAEPtB,GADUwB,IACAvB,eACVwC,EAAWC,cACXP,EAASJ,IACThC,EAAMrC,IAPM,EAQc4B,mBAASmD,EAASE,OARhC,mBAQXC,EARW,aASoBtD,mBAAS,KAT7B,mBASXuD,EATW,KASEC,EATF,OAaUxD,mBAAS,GAbnB,mBAaXyD,EAbW,KAaHC,EAbG,OAcgB1D,mBAAS,GAdzB,mBAcX2D,EAdW,KAcAC,EAdA,KAeZC,EAAeC,uBAAY,SAACjD,GAC9B,IAAMkD,EAAMC,KAAKC,IAAIpD,EAAEe,OAAOF,MAAO,GACrCwC,EAAQ,YAAI,IAAIC,MAAOR,EAAYI,IAAOK,KAAI,SAAAC,GAAI,OAAI,MACtDX,EAAUK,KACX,CAACJ,IACEW,EAAkBR,uBAAY,SAACjD,GACjC,IAAMkD,EAAMC,KAAKC,IAAIpD,EAAEe,OAAOF,MAAO,GACrCwC,EAAQ,YAAI,IAAIC,MAAOV,EAASM,IAAOK,KAAI,SAAAC,GAAI,OAAI,MACnDT,EAAaG,KACd,CAACN,IACEc,EAASC,mBAzBG,EA0BMxE,mBAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,IA1BnD,mBA0BXyE,EA1BW,KA0BLP,EA1BK,OA8B0BlE,mBAAS,QA9BnC,mBA8BX0E,EA9BW,KA8BKC,EA9BL,OAkC0B3E,mBAAS,MAlCnC,mBAkCX4E,EAlCW,KAkCKC,EAlCL,KAmCZC,EAAchB,uBAAY,SAACjD,GAC7B,IAAMkE,EAAU9D,EAAK+D,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,YAAclE,EAAKmE,YACtE,GAAIL,EAAQzB,SAAS+B,eAAiB/B,EAAS+B,cAA/C,CAGA,IAAIC,EAAWzE,EAAEe,OAAO2D,QAAQC,GAC5BxE,EAAOH,EAAEe,OAAO2D,QAAQvE,KAC5B,GAAI2B,OAAO8C,QAAP,gCAAwCzE,EAAxC,MACA,IAA4C,GAAxCC,EAAKyE,aAAaC,QAAQL,GAC1BM,MAAM,0CACH,CACH,IAAIC,EAAU,CACVC,UAAW1E,EACX2D,UACAgB,KAAM/E,EACNgF,QAASV,GAEb9B,EAAe,IACfX,EAAOoD,KAAK,OAAQJ,OAG7B,CAAC5E,EAAM4B,IACJqD,EAAapC,uBAAY,WACvBnB,OAAO8C,QAAQ,+GACf5C,EAAOoD,KAAK,aAAc,CAAEH,UAAW1E,EAAMqD,OAAM0B,OAAQzB,MAEhE,CAAC7B,EAAQ4B,EAAMC,EAAgBtD,IAelC,OAdA2B,qBAAU,WACM,MAAR9B,EACAP,EAAQS,KAAR,oBAA0BC,IAEE,uCAAG,4BAAA7C,EAAA,gEACtB0C,QADsB,IACtBA,OADsB,EACtBA,EAAMkF,OADgB,iEAIX1F,EAAI,YAAD,OAAaQ,EAAKkF,QAAU,OAJpB,OAIvBxG,EAJuB,OAK3BkF,EAAkBlF,GALS,2CAAH,oDAO5ByG,KAEL,CAACnF,IAEAA,GAAQ,qBAAKI,UAAU,OAAf,SACJ,sBAAKA,UAAU,kCAAkCgF,aAAYpF,EAAKD,KAAlE,UACI,qBAAKK,UAAU,+BAAf,SACI,6BAEQJ,EAAK+D,QAAQZ,KAAI,SAACc,GACd,OACI,qBAAI7D,UAAW6D,EAAOoB,OAAS,SAAW,GAA1C,UACI,+BAAOpB,EAAO5B,WACd,yBAF+C4B,EAAO5B,iBAS9E,qBAAKjC,UAAU,0BAAf,UAEY,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMsF,SACFtF,EAAK+D,QAAQZ,KAAI,SAACc,GACd,OACI,qBAAK7D,UAAS,6BAAwBJ,EAAK+D,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,YAAclE,EAAKmE,YAAU9B,UAAY4B,EAAO5B,SAAW,WAAa,IAAM+C,aAAYnB,EAAO5B,SAA1K,SAEQ4B,EAAOsB,KAAKpC,KAAI,SAACqC,EAASC,GACtB,OACI,qBAAKrF,UAAS,eAAUJ,EAAK0F,WAAWD,GAAS,MAAQ,IAAME,MAAO,CAAEC,gBAAgB,qCAAD,OAAuCJ,EAAQT,QAAQc,QAAQ,IAAK,KAAKA,QAAQ,SAAU,SAA3F,oBAS/G,mGAGZ,qBAAKzF,UAAU,6BAAf,UAEY,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMsF,SACF,qCACI,sBAAKlF,UAAS,kBAAaJ,EAAK+D,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,YAAclE,EAAKmE,YAAU9B,SAAS+B,eAAiB/B,EAAS+B,cAAgB,YAAc,IAA5J,sBACcpE,GAAQA,EAAK+D,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,YAAclE,EAAKmE,YAAU9B,YAGlFrC,EAAK0F,WAAW3C,KAAK+C,MAAM9F,EAAKyE,aAAasB,OAAO/F,EAAK+D,QAAQgC,UACjE,sBAAK3F,UAAU,UAAf,UACI,mBAAGA,UAAU,iBAAb,qBADJ,qBAIJ,uBAAOA,UAAU,YAAYG,YAAY,YAAYC,KAAK,OAAOC,MAAO6B,EAAa5B,SArHjF,SAACd,GAC7B2C,EAAe3C,EAAEe,OAAOF,UAqHA,qBAAKL,UAAU,QAAf,SAEQuD,EACIA,EAAeR,KAAI,SAAA2B,GACf,OACI,qBACI1E,UAAS,gBAAwD,GAA9CJ,EAAKyE,aAAaC,QAAQI,EAAKkB,aAAwF,GAApElB,EAAKkB,UAAU5B,cAAcM,QAAQpC,EAAY8B,eAAuB,GAAK,SAA1I,YAAsJpE,EAAK+D,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,YAAclE,EAAKmE,YAAU9B,SAAS+B,eAAiB/B,EAAS+B,cAAgB,WAAa,IAC/RuB,MAAO,CAAEC,gBAAgB,qCAAD,OAAuCd,EAAKkB,UAAUH,QAAQ,IAAK,KAAKA,QAAQ,SAAU,SAA1F,UACxBI,UAASnB,EAAKkB,UACdE,YAAWpB,EAAKqB,YAChBC,QAASvC,OAMrB,kDAMhB,8BAEQ7D,EAAK+D,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAO5B,SAAS+B,eAAiB/B,EAAS+B,iBAAeiC,KACjF,sBAAKjG,UAAU,UAAf,UACI,4CACA,uBAAOI,KAAK,SAAS8F,IAAI,IAAI7F,MAAO+B,EAAQ9B,SAAUkC,IACtD,yCACA,uBAAOpC,KAAK,SAAS8F,IAAI,IAAI7F,MAAOiC,EAAWhC,SAAU2C,IAErDX,EAAY,GACR,sBAAKiD,MAAO,CAACY,MAAO,QAApB,2BAEI,qBAAKC,IAAKlD,EAAQlD,UAAU,OAAOgG,QAvI9D,SAACxG,GACtBqD,EAAQ,YAAIK,EAAOmD,QAAQC,iBAAiB,UAAUvD,KAAI,SAAAC,GAAI,OAAIA,EAAKuD,aAsIvB,SAEQnD,EAAKL,KAAI,SAACyD,EAAKC,GACX,OACI,sBAAKlB,MAAO,CAAEY,MAAO,OAAQO,QAAS,OAAQC,cAAe,SAAUC,eAAgB,eAAgBC,WAAY,UAAnH,UACI,+BAAQJ,EAAI,IACZ,uBAAOK,SAAU1D,EAAK2D,OAAOC,SAASrB,QAAQrD,IAAckE,EAAKD,QAASC,EAAKpG,KAAK,wBASpH,4CACA,yBAAQC,MAAOgD,EAAgB/C,SAnJ1C,SAACd,GAC1B8D,EAAkB9D,EAAEe,OAAOF,QAkJS,UACI,wBAAQA,MAAM,OAAd,0BACA,wBAAQA,MAAM,OAAd,0BACA,wBAAQA,MAAM,QAAd,8BA5BR,IA6Bc,uBACV,wBAAQL,UAAU,UAAUgG,QAASnB,EAArC,4BAGJ,iDACa,sBAAMU,MAAO,CAAE0B,WAAY,QAA3B,SAAsCrH,EAAK+D,QAAQC,MAAK,SAAAC,GAAM,OAAIA,EAAOoC,QAAMhE,WAD5F,8CCjEzBiF,EA1HE,SAAAxI,GAAU,IACfqB,EAAS8B,cAAT9B,KACFoH,EAAOhE,mBACPrB,EAAWC,cAHK,EAIEpD,mBAAS,MAJX,mBAIfiB,EAJe,KAIToB,EAJS,KAKhB5B,EAAMrC,IACNyE,EAASJ,IANO,EAOUzC,mBAAS,IAPnB,mBAOfsD,EAPe,KAOLmF,EAPK,OAWUzI,mBAAS,IAXnB,mBAWfG,EAXe,KAWLC,EAXK,OAekBJ,mBAAS,IAf3B,mBAef0I,EAfe,KAeDC,EAfC,OAmBoB3I,mBAAS,IAnB7B,mBAmBf4I,EAnBe,KAmBAC,EAnBA,OAoBoB7I,mBAAS,IApB7B,mBAoBfO,EApBe,KAoBAC,EApBA,OAqB4BR,mBAAS,IArBrC,mBAqBf8I,EArBe,KAqBIC,EArBJ,KAsBhBrI,EAAUC,cACVqI,EAAahH,IACbiH,EAAM,uCAAG,WAAOC,GAAP,2BAAA3K,EAAA,6DACL4K,EAAU,IAAIC,YACdC,EAAOF,EAAQG,OAAOJ,GAFjB,SAGQK,OAAOC,OAAOC,OAAO,UAAWJ,GAHxC,OAOX,IAJMK,EAHK,OAIPC,EAAS,GACPC,EAAQ,IAAIC,WAAWH,GACvBI,EAAMF,EAAMG,WACTjC,EAAI,EAAGA,EAAIgC,EAAKhC,IACrB6B,GAAUK,OAAOC,aAAaL,EAAM9B,IAR7B,yBAUJoC,KAAKP,IAVD,4CAAH,sDAYNQ,EAAQ,uCAAG,sBAAA5L,EAAA,sEACP6L,UAAUC,UAAUC,UAApB,2DAAkFlJ,IAD3E,OAEboH,EAAKd,QAAQ6C,UAAUC,IAAI,UAFd,2CAAH,qDAIRC,EAAQ,uCAAG,WAAO5J,GAAP,SAAAtC,EAAA,6DACbsC,EAAEC,iBACFN,EAAiB,IACjBqI,EAAiB,IACjBE,EAAqB,IAJR,SAKHE,EAAOP,GALJ,2BAKqBzH,EAAKd,SAL1B,mCAMT4I,EAAqB,uBANZ,8BASR,QAAQhI,KAAKuC,GATL,wBAUTuF,EAAiB,0EAVR,8BAaG,IAAZ1I,EAbS,wBAcTK,EAAiB,2BAdR,2BAiBbqC,EAAOoD,KAAK,WAAY,CAAE3C,WAAUnD,WAAUc,KAAMG,IAjBvC,4CAAH,sDA0Cd,OAvBA2B,qBAAU,WACN,IAAM2H,EAAY,uCAAG,4BAAAnM,EAAA,sEACAkC,EAAI,SAAD,OAAUW,GAAQ,OADrB,OACbH,EADa,OAEjBoB,EAAQpB,GAFS,2CAAH,qDAIdkC,EAASE,MACThB,EAAQc,EAASE,OAEjBqH,IAEJ7H,EAAOG,GAAG,SAAS,SAAAkG,GACA,kBAAXA,EACA1I,EAAiB,kBAEjBuI,EAAqBG,QAG9B,IACHnG,qBAAU,WACY,MAAdiG,GACAtI,EAAQS,KAAR,gBAAsB6H,EAAW5H,MAAQkC,KAE9C,CAAC0F,IAEA/H,GAAQ,qBAAKI,UAAU,OAAf,SACJ,sBAAKA,UAAU,YAAf,UACI,8BACmB,IAAZJ,EAAKpB,GAAP,uBAAuCoB,EAAKD,MAA5C,4BAA0EI,QAEhE,IAAZH,EAAKpB,KACJ,qCACI,oBAAGwB,UAAU,cAAb,iLAEI,uBAAMC,MAAM,aAAa+F,QAAS8C,EAAlC,UACI,uBAAM9I,UAAU,OAAhB,8DACsDD,KAEtD,mBAAGqG,IAAKe,EAAMlH,MAAM,uBAApB,gCAGR,uBAAMC,SAAUkJ,EAAhB,UACI,uBAAOjJ,YAAY,WAAWC,KAAK,OAAOC,MAAO4B,EAAU3B,SA5FtD,SAACd,GAC1B4H,EAAY5H,EAAEe,OAAOF,UA4FiB,IAAjBkH,GAAuB,qBAAKvH,UAAU,QAAf,SACnBuH,IAEL,uBAAOpH,YAAY,WAAWC,KAAK,WAAWC,MAAOvB,EAAUwB,SA5F1D,SAACd,GAC1BT,EAAYS,EAAEe,OAAOF,UA4FiB,IAAjBnB,GAAuB,qBAAKc,UAAU,QAAf,SACnBd,IAEL,uBAAOiB,YAAY,gBAAgBC,KAAK,WAAWC,MAAOgH,EAAc/G,SA5F/D,SAACd,GAC9B8H,EAAgB9H,EAAEe,OAAOF,UA4FiB,IAArBoH,GAA2B,qBAAKzH,UAAU,QAAf,SACvByH,IAEL,wBAAQrH,KAAK,SAAb,8B,QC5FbkJ,MAlBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWhL,IAEjC,cAAC,IAAD,CAAO8K,KAAK,cAAcC,OAAK,EAACC,UAAW7H,IAE3C,cAAC,IAAD,CAAO2H,KAAK,kBAAkBC,OAAK,EAACC,UAAWvC,IAE/C,cAAC,IAAD,CAAOqC,KAAK,QAAQC,OAAK,EAAzB,SACE,+CCZVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.45c6d732.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst useApi = () => {\r\n    const returnFunction = async (endpoint, method, body = null, isJson=true) => {\r\n        const baseUrl = \"/api/\";\r\n        let headers = new Headers();\r\n        if(isJson){\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        let options = {\r\n            method,\r\n            body: body != null && method != \"GET\" ? JSON.stringify(body) : null,\r\n            headers\r\n        }\r\n        if(body instanceof FormData){\r\n            options.body=body;\r\n        }\r\n        let queryParameters = \"\";\r\n        if (method == \"GET\" && body!=null) {\r\n            let qp = new URLSearchParams();\r\n            Object.entries(body).forEach((param) => {\r\n                qp.append(param[0], param[1]);\r\n            });\r\n            queryParameters = `?${qp.toString()}`;\r\n        }\r\n        let res = await fetch(`${baseUrl}${endpoint}${queryParameters}`, options);\r\n        let json;\r\n        try {\r\n            json = await res.json();\r\n        }catch(e){\r\n            json={\r\n                ok: false\r\n            }\r\n        }\r\n        return json;\r\n    };\r\n    return returnFunction;\r\n};\r\n\r\nexport default useApi;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useApi from '../hooks/useApi';\r\nimport \"./Home.css\";\r\n\r\nconst Home = props => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const handleRoomChange = (e) => {\r\n        setRoomName(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomError, setRoomError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const api = useApi();\r\n    const history= useHistory();\r\n    const createRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setRoomError(\"\");\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        if(!/^(\\w|\\s)+$/.test(roomName)){\r\n            setRoomError(\"Room name can't contain special characters and can't be blank\");\r\n            return;\r\n        }\r\n        let room = await api(\"rooms\", \"POST\", {\r\n            name: roomName,\r\n            password: password\r\n        });\r\n        if (room.error) {\r\n            setRoomError(\"A room with the same name already exists, try another one\")\r\n        } else {\r\n            history.push(`/joinroom/${room.link}`, room);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    Welcome to Pokemon Go drafter, the definitive tool to create a draft tournament with your friends.\r\n                </h3>\r\n                <p class=\"explanation\">\r\n                    Chose a room name and a password, share the link and the password with friends and start drafting.\r\n                </p>\r\n                <form onSubmit={createRoom}>\r\n                    <input placeholder=\"Room Name\" type=\"text\" value={roomName} onChange={handleRoomChange} />\r\n                    {roomError != \"\" && <div className=\"error\">\r\n                        {roomError}\r\n                    </div>}\r\n                    <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    {passwordError != \"\" && <div className=\"error\">\r\n                        {passwordError}\r\n                    </div>}\r\n                    <button type=\"submit\">Create Room</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst RoomContext = createContext(null);\r\nconst UpdateRoomContext = createContext(null);\r\n\r\nconst useRoom=()=>{\r\n    return useContext(RoomContext);\r\n}\r\n\r\nconst useSetRoom=()=>{\r\n    return useContext(UpdateRoomContext);\r\n}\r\n\r\nconst RoomContextProvider = ({ children }) => {\r\n    const [room, setRoom] = useState(null);\r\n    return (\r\n        <RoomContext.Provider value={room}>\r\n            <UpdateRoomContext.Provider value={setRoom}>\r\n                {children}\r\n            </UpdateRoomContext.Provider>\r\n        </RoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RoomContextProvider;\r\nexport { RoomContext, useRoom, useSetRoom };","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport { useSetRoom } from './RoomContext';\r\n\r\nconst SocketContext = createContext(null);\r\nconst UpdateSocketContext = createContext(null);\r\n\r\nconst useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nconst useSetSocket = () => {\r\n    return useContext(UpdateSocketContext);\r\n}\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState(window.io());\r\n    const setRoom=useSetRoom();\r\n    useEffect(() => {\r\n        socket.on(\"updateRoom\", room => {\r\n            setRoom(room);\r\n        });\r\n    }, [setRoom]);\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            <UpdateSocketContext.Provider value={setSocket}>\r\n                {socket && children}\r\n            </UpdateSocketContext.Provider>\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SocketContextProvider;\r\nexport { SocketContext, useSocket, useSetSocket };","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport useApi from '../hooks/useApi';\r\n\r\nlet socket;\r\nconst Room = props => {\r\n    const { link } = useParams();\r\n    const room = useRoom();\r\n    const setRoom = useSetRoom();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const socket = useSocket();\r\n    const api = useApi();\r\n    const [username, setUsername] = useState(location.state);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const handleSearchQueryChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n    const [rounds, setRounds] = useState(6);\r\n    const [banRounds, setBanRounds] = useState(0);\r\n    const handleRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 1);\r\n        setBans([...new Array((banRounds + val))].map(elem => false));\r\n        setRounds(val);\r\n    }, [banRounds]);\r\n    const handleBanRounds = useCallback((e) => {\r\n        const val = Math.max(e.target.value, 0);\r\n        setBans([...new Array((rounds + val))].map(elem => false));\r\n        setBanRounds(val);\r\n    }, [rounds]);\r\n    const banRef = useRef();\r\n    const [bans, setBans] = useState([false, false, false, false, false, false]);\r\n    const handleCheckboxes = (e) => {\r\n        setBans([...banRef.current.querySelectorAll(\"input\")].map(elem => elem.checked));\r\n    }\r\n    const [selectedLeague, setSelectedLeague] = useState(\"1500\");\r\n    const handleSelectedLeague = (e) => {\r\n        setSelectedLeague(e.target.value);\r\n    };\r\n    const [pvpokeRankings, setPvpokeRankings] = useState(null);\r\n    const pickPokemon = useCallback((e) => {\r\n        const chooser = room.players.find(player => player.pick_order == room.choosing);\r\n        if (chooser.username.toLowerCase() != username.toLowerCase()) {\r\n            return;\r\n        }\r\n        let selected = e.target.dataset.id;\r\n        let name = e.target.dataset.name;\r\n        if (window.confirm(`Do you want to select ${name}?`)) {\r\n            if (room.choosed_list.indexOf(selected) != -1) {\r\n                alert(\"This pokemon was already selected.\");\r\n            } else {\r\n                let newPick = {\r\n                    room_link: link,\r\n                    chooser,\r\n                    pick: name,\r\n                    pick_id: selected\r\n                }\r\n                setSearchQuery(\"\");\r\n                socket.emit(\"pick\", newPick);\r\n            }\r\n        }\r\n    }, [room, socket]);\r\n    const startDraft = useCallback(() => {\r\n        if (window.confirm(\"Are you sure you want to start the draft? No other person will be able to join after the draft is started.\")) {\r\n            socket.emit(\"startDraft\", { room_link: link, bans, league: selectedLeague });\r\n        }\r\n    }, [socket, bans, selectedLeague, link])\r\n    useEffect(() => {\r\n        if (room == null) {\r\n            history.push(`/joinroom/${link}`);\r\n        } else {\r\n            const getPvpokeRankingsAsync = async () => {\r\n                if (!room?.league) {\r\n                    return;\r\n                }\r\n                let res = await api(`rankings/${room.league}`, \"GET\");\r\n                setPvpokeRankings(res);\r\n            };\r\n            getPvpokeRankingsAsync();\r\n        }\r\n    }, [room]);\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container titled room-container\" data-title={room.name}>\r\n                <div className=\"container-element playerlist\">\r\n                    <ul>\r\n                        {\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <li className={player.online ? \"online\" : \"\"} key={player.username}>\r\n                                        <span>{player.username}</span>\r\n                                        <hr />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"container-element teams\">\r\n                    {\r\n                        room?.started ?\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <div className={`player-team titled ${room.players.find(player => player.pick_order == room.choosing).username == player.username ? \"choosing\" : \"\"}`} data-title={player.username}>\r\n                                        {\r\n                                            player.team.map((pokemon, index) => {\r\n                                                return (\r\n                                                    <div className={`pick ${room.ban_rounds[index] ? \"ban\" : \"\"}`} style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pokemon.pick_id.replace(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }) :\r\n                            <h2>Everyone's team will be shown here as soon as the draft starts!</h2>\r\n                    }\r\n                </div>\r\n                <div className=\"container-element commands\">\r\n                    {\r\n                        room?.started ?\r\n                            <>\r\n                                <div className={`chooser ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() == username.toLowerCase() ? \"your-turn\" : \"\"}`}>\r\n                                    Chooser: {room && room.players.find(player => player.pick_order == room.choosing).username}\r\n                                </div>\r\n                                {\r\n                                    room.ban_rounds[Math.floor(room.choosed_list.length/room.players.length)] &&\r\n                                    <div className=\"warning\">\r\n                                        <i className=\"material-icons\">warning</i> banning round.\r\n                                    </div>\r\n                                }\r\n                                <input className=\"searchBox\" placeholder=\"Search...\" type=\"text\" value={searchQuery} onChange={handleSearchQueryChange} />\r\n                                <div className=\"picks\">\r\n                                    {\r\n                                        pvpokeRankings ?\r\n                                            pvpokeRankings.map(pick => {\r\n                                                return (\r\n                                                    <div\r\n                                                        className={`pick ${room.choosed_list.indexOf(pick.speciesId) == -1 && pick.speciesId.toLowerCase().indexOf(searchQuery.toLowerCase()) != -1 ? \"\" : \"hidden\"} ${room.players.find(player => player.pick_order == room.choosing).username.toLowerCase() != username.toLowerCase() ? \"disabled\" : \"\"}`}\r\n                                                        style={{ backgroundImage: `url(https://rankingsbot.com/imgs2/${pick.speciesId.replace(\"_\", \"-\").replace(\"alolan\", \"alola\")}.png)` }}\r\n                                                        data-id={pick.speciesId}\r\n                                                        data-name={pick.speciesName}\r\n                                                        onClick={pickPokemon}\r\n                                                    >\r\n                                                    </div>\r\n                                                );\r\n                                            })\r\n                                            :\r\n                                            <div>\r\n                                                Loading...\r\n                            </div>\r\n                                    }\r\n                                </div>\r\n                            </> :\r\n                            <div>\r\n                                {\r\n                                    room.players.find(player => player.username.toLowerCase() == username.toLowerCase()).host ?\r\n                                        <div className=\"options\">\r\n                                            <label>Rounds:</label>\r\n                                            <input type=\"number\" min=\"1\" value={rounds} onChange={handleRounds} />\r\n                                            <label>Ban:</label>\r\n                                            <input type=\"number\" min=\"0\" value={banRounds} onChange={handleBanRounds} />\r\n                                            {\r\n                                                banRounds > 0 && (\r\n                                                    <div style={{width: \"100%\"}}>\r\n                                                        Rounds to ban:\r\n                                                        <div ref={banRef} className=\"bans\" onClick={handleCheckboxes}>\r\n                                                            {\r\n                                                                bans.map((ban, i) => {\r\n                                                                    return (\r\n                                                                        <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-evenly\", alignItems: \"center\" }}>\r\n                                                                            <span>{(i + 1)}</span>\r\n                                                                            <input disabled={bans.filter(Boolean).length==banRounds && !ban} checked={ban} type=\"checkbox\"></input>\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            <label>League:</label>\r\n                                            <select value={selectedLeague} onChange={handleSelectedLeague}>\r\n                                                <option value=\"1500\">Great League</option>\r\n                                                <option value=\"2500\">Ultra League</option>\r\n                                                <option value=\"10000\">Master League</option>\r\n                                            </select> <br />\r\n                                            <button className=\"lighter\" onClick={startDraft}>Start Draft</button>\r\n                                        </div>\r\n                                        :\r\n                                        <>\r\n                                            The host <span style={{ fontWeight: \"bold\" }}>{room.players.find(player => player.host).username}</span> hasn't started the draft yet.\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Room;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext'\r\nimport useApi from '../hooks/useApi'\r\n\r\nconst JoinRoom = props => {\r\n    const { link } = useParams();\r\n    const icon = useRef();\r\n    const location = useLocation();\r\n    const [room, setRoom] = useState(null);\r\n    const api = useApi();\r\n    const socket = useSocket();\r\n    const [username, setUsername] = useState(\"\");\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomPassword, setRoomPassword] = useState(\"\");\r\n    const handleRoomPasswordChange = (e) => {\r\n        setRoomPassword(e.target.value);\r\n    };\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [roomPasswordError, setRoomPasswordError] = useState(\"\");\r\n    const history = useHistory();\r\n    const globalRoom = useRoom();\r\n    const sha256 = async (message) => {\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(message);\r\n        const hash = await crypto.subtle.digest('SHA-256', data);\r\n        let binary = '';\r\n        const bytes = new Uint8Array(hash);\r\n        const len = bytes.byteLength;\r\n        for (let i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return btoa(binary);\r\n    }\r\n    const copyLink = async () => {\r\n        await navigator.clipboard.writeText(`https://pokemongo-drafter.herokuapp.com/joinroom/${link}`);\r\n        icon.current.classList.add(\"copied\");\r\n    }\r\n    const joinRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setUsernameError(\"\");\r\n        setRoomPasswordError(\"\");\r\n        if (await sha256(roomPassword) != room.password) {\r\n            setRoomPasswordError(\"Wrong room Password\");\r\n            return;\r\n        }\r\n        if (!/^\\w+$/.test(username)) {\r\n            setUsernameError(\"Username can't contain spaces or special characters and can't be blank\");\r\n            return;\r\n        }\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        socket.emit(\"joinRoom\", { username, password, room: link })\r\n    };\r\n    useEffect(() => {\r\n        const getRoomAsync = async () => {\r\n            let room = await api(`rooms/${link}`, \"GET\");\r\n            setRoom(room);\r\n        };\r\n        if (location.state) {\r\n            setRoom(location.state);\r\n        } else {\r\n            getRoomAsync();\r\n        }\r\n        socket.on(\"error\", message => {\r\n            if (message == \"Wrong password\") {\r\n                setPasswordError(\"Wrong password\")\r\n            } else {\r\n                setRoomPasswordError(message);\r\n            }\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (globalRoom != null) {\r\n            history.push(`/room/${globalRoom.link}`, username);\r\n        }\r\n    }, [globalRoom])\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    {!(room.ok === false) ? `Joining room ${room.name}` : `No room with name ${link}`}\r\n                </h3>\r\n                {!(room.ok === false) && (\r\n                    <>\r\n                        <p className=\"explanation\">\r\n                            Choose your Username and Password, you'll need them to come back later! Share the following link and the room password with your friends to let them join the draft!\r\n                            <code class=\"share-link\" onClick={copyLink}>\r\n                                <span className=\"link\">\r\n                                    https://pokemongo-drafter.herokuapp.com/joinroom/{link}\r\n                                </span>\r\n                                <i ref={icon} class=\"material-icons right\">content_copy</i>\r\n                            </code>\r\n                        </p>\r\n                        <form onSubmit={joinRoom}>\r\n                            <input placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                            {usernameError != \"\" && <div className=\"error\">\r\n                                {usernameError}\r\n                            </div>}\r\n                            <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                            {passwordError != \"\" && <div className=\"error\">\r\n                                {passwordError}\r\n                            </div>}\r\n                            <input placeholder=\"Room Password\" type=\"password\" value={roomPassword} onChange={handleRoomPasswordChange} />\r\n                            {roomPasswordError != \"\" && <div className=\"error\">\r\n                                {roomPasswordError}\r\n                            </div>}\r\n                            <button type=\"submit\">Join</button>\r\n                        </form>\r\n                    </>\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JoinRoom;","import './App.css';\nimport { Home, Room, JoinRoom } from './views'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}>\n        </Route>\n        <Route path=\"/room/:link\" exact component={Room}>\n        </Route>\n        <Route path=\"/joinroom/:link\" exact component={JoinRoom}>\n        </Route>\n        <Route path=\"/test\" exact>\n          <div>Test</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SocketContextProvider from './contexts/SocketContext'\nimport RoomContextProvider from './contexts/RoomContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoomContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </RoomContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}