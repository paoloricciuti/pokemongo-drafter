{"version":3,"sources":["hooks/useApi.js","views/Home.js","contexts/RoomContext.js","views/Room.js","contexts/SocketContext.js","views/JoinRoom.js","App.js","index.js"],"names":["useApi","endpoint","method","a","body","isJson","baseUrl","headers","Headers","append","options","JSON","stringify","FormData","queryParameters","qp","URLSearchParams","Object","entries","forEach","param","toString","fetch","res","json","ok","Home","props","useState","roomName","setRoomName","password","setPassword","roomError","setRoomError","passwordError","setPasswordError","api","history","useHistory","createRoom","e","preventDefault","name","room","error","push","link","className","class","onSubmit","placeholder","type","value","onChange","target","RoomContext","createContext","UpdateRoomContext","useRoom","useContext","useSetRoom","RoomContextProvider","children","setRoom","Provider","Room","useParams","useEffect","data-title","players","map","player","online","username","SocketContext","UpdateSocketContext","SocketContextProvider","window","io","socket","setSocket","on","JoinRoom","icon","useRef","location","useLocation","setUsername","roomPassword","setRoomPassword","usernameError","setUsernameError","roomPasswordError","setRoomPasswordError","globalRoom","sha256","message","encoder","TextEncoder","data","encode","crypto","subtle","digest","hash","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","btoa","copyLink","navigator","clipboard","writeText","current","classList","add","joinRoom","test","emit","getRoomAsync","state","_","onClick","ref","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38ddb501.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst useApi = () => {\r\n    const returnFunction = async (endpoint, method, body = null, isJson=true) => {\r\n        const baseUrl = \"/api/\";\r\n        let headers = new Headers();\r\n        if(isJson){\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        let options = {\r\n            method,\r\n            body: body != null && method != \"GET\" ? JSON.stringify(body) : null,\r\n            headers\r\n        }\r\n        if(body instanceof FormData){\r\n            options.body=body;\r\n        }\r\n        let queryParameters = \"\";\r\n        if (method == \"GET\" && body!=null) {\r\n            let qp = new URLSearchParams();\r\n            Object.entries(body).forEach((param) => {\r\n                qp.append(param[0], param[1]);\r\n            });\r\n            queryParameters = `?${qp.toString()}`;\r\n        }\r\n        let res = await fetch(`${baseUrl}${endpoint}${queryParameters}`, options);\r\n        let json;\r\n        try {\r\n            json = await res.json();\r\n        }catch(e){\r\n            json={\r\n                ok: false\r\n            }\r\n        }\r\n        return json;\r\n    };\r\n    return returnFunction;\r\n};\r\n\r\nexport default useApi;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useApi from '../hooks/useApi';\r\nimport \"./Home.css\";\r\n\r\nconst Home = props => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const handleRoomChange = (e) => {\r\n        setRoomName(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomError, setRoomError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const api = useApi();\r\n    const history= useHistory();\r\n    const createRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setRoomError(\"\");\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        if(roomName==\"\"){\r\n            setRoomError(\"Room name can't be blank\");\r\n            return;\r\n        }\r\n        let room = await api(\"rooms\", \"POST\", {\r\n            name: roomName,\r\n            password: password\r\n        });\r\n        if (room.error) {\r\n            setRoomError(\"A room with the same name already exists, try another one\")\r\n        } else {\r\n            history.push(`/joinroom/${room.link}`, room);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    Welcome to Pokemon Go drafter, the definitive tool to create a draft tournament with your friends.\r\n                </h3>\r\n                <p class=\"explanation\">\r\n                    Chose a room name and a password, share the link and the password with friends and start drafting.\r\n                </p>\r\n                <form onSubmit={createRoom}>\r\n                    <input placeholder=\"Room Name\" type=\"text\" value={roomName} onChange={handleRoomChange} />\r\n                    {roomError != \"\" && <div className=\"error\">\r\n                        {roomError}\r\n                    </div>}\r\n                    <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                    {passwordError != \"\" && <div className=\"error\">\r\n                        {passwordError}\r\n                    </div>}\r\n                    <button type=\"submit\">Create Room</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst RoomContext = createContext(null);\r\nconst UpdateRoomContext = createContext(null);\r\n\r\nconst useRoom=()=>{\r\n    return useContext(RoomContext);\r\n}\r\n\r\nconst useSetRoom=()=>{\r\n    return useContext(UpdateRoomContext);\r\n}\r\n\r\nconst RoomContextProvider = ({ children }) => {\r\n    const [room, setRoom] = useState(null);\r\n    return (\r\n        <RoomContext.Provider value={room}>\r\n            <UpdateRoomContext.Provider value={setRoom}>\r\n                {children}\r\n            </UpdateRoomContext.Provider>\r\n        </RoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RoomContextProvider;\r\nexport { RoomContext, useRoom, useSetRoom };","import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\n\r\nlet socket;\r\nconst Room = props => {\r\n    const { link } = useParams();\r\n    const room = useRoom();\r\n    const setRoom = useSetRoom();\r\n    const history = useHistory();\r\n    /*useEffect(() => {\r\n        setRoom({\r\n            name: link,\r\n            link: link,\r\n            players: [\r\n                {\r\n                    username: \"pablopang\",\r\n                    online: 1\r\n                }, {\r\n                    username: \"FedoBass\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"NRX843\",\r\n                    online: 1\r\n                }, {\r\n                    username: \"HElSENBERG24\",\r\n                    online: 1\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 1\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }, {\r\n                    username: \"Lorm96\",\r\n                    online: 0\r\n                }\r\n            ]\r\n        })\r\n    }, []);*/\r\n    useEffect(() => {\r\n        if (room == null) {\r\n            history.push(`/joinroom/${link}`);\r\n        }\r\n    }, [room]);\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container titled room-container\" data-title={room.name}>\r\n                <div className=\"container-element playerlist\">\r\n                    <ul>\r\n                        {\r\n                            room.players.map((player) => {\r\n                                return (\r\n                                    <li className={player.online?\"online\":\"\"} key={player.username}>\r\n                                        <span>{player.username}</span>\r\n                                        <hr />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"container-element teams\">\r\n                    teams\r\n                </div>\r\n                <div className=\"container-element commands\">\r\n                    commands\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Room;","import React, { useState, createContext, useContext, useEffect } from 'react';\r\nimport { useSetRoom } from './RoomContext';\r\n\r\nconst SocketContext = createContext(null);\r\nconst UpdateSocketContext = createContext(null);\r\n\r\nconst useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nconst useSetSocket = () => {\r\n    return useContext(UpdateSocketContext);\r\n}\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState(window.io());\r\n    const setRoom=useSetRoom();\r\n    useEffect(() => {\r\n        socket.on(\"updateRoom\", room => {\r\n            setRoom(room);\r\n        });\r\n    }, [setRoom]);\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            <UpdateSocketContext.Provider value={setSocket}>\r\n                {socket && children}\r\n            </UpdateSocketContext.Provider>\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SocketContextProvider;\r\nexport { SocketContext, useSocket, useSetSocket };","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\r\nimport { useRoom, useSetRoom } from '../contexts/RoomContext';\r\nimport { useSocket } from '../contexts/SocketContext'\r\nimport useApi from '../hooks/useApi'\r\n\r\nconst JoinRoom = props => {\r\n    const { link } = useParams();\r\n    const icon = useRef();\r\n    const location = useLocation();\r\n    const [room, setRoom] = useState(null);\r\n    const api = useApi();\r\n    const socket = useSocket();\r\n    const [username, setUsername] = useState(\"\");\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const [password, setPassword] = useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const [roomPassword, setRoomPassword] = useState(\"\");\r\n    const handleRoomPasswordChange = (e) => {\r\n        setRoomPassword(e.target.value);\r\n    };\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [roomPasswordError, setRoomPasswordError] = useState(\"\");\r\n    const history = useHistory();\r\n    const globalRoom = useRoom();\r\n    const sha256 = async (message) => {\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(message);\r\n        const hash = await crypto.subtle.digest('SHA-256', data);\r\n        let binary = '';\r\n        const bytes = new Uint8Array(hash);\r\n        const len = bytes.byteLength;\r\n        for (let i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return btoa(binary);\r\n    }\r\n    const copyLink = async () => {\r\n        await navigator.clipboard.writeText(`https://pokemongo-drafter.herokuapp.com/joinroom/${link}`);\r\n        icon.current.classList.add(\"copied\");\r\n    }\r\n    const joinRoom = async (e) => {\r\n        e.preventDefault();\r\n        setPasswordError(\"\");\r\n        setUsernameError(\"\");\r\n        setRoomPasswordError(\"\");\r\n        if (await sha256(roomPassword) != room.password) {\r\n            setRoomPasswordError(\"Wrong room Password\");\r\n            return;\r\n        }\r\n        if (!/^\\w+$/.test(username)) {\r\n            setUsernameError(\"Username can't contain spaces or special characters and can't be blank\");\r\n            return;\r\n        }\r\n        if (password == \"\") {\r\n            setPasswordError(\"Password can't be blank\");\r\n            return;\r\n        }\r\n        socket.emit(\"joinRoom\", { username, password, room: link })\r\n    };\r\n    useEffect(() => {\r\n        const getRoomAsync = async () => {\r\n            let room = await api(`rooms/${link}`, \"GET\");\r\n            setRoom(room);\r\n        };\r\n        if (location.state) {\r\n            setRoom(location.state);\r\n        } else {\r\n            getRoomAsync();\r\n        }\r\n        socket.on(\"wrongPassword\", _ => {\r\n            setPasswordError(\"Wrong password\")\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (globalRoom != null) {\r\n            history.push(`/room/${globalRoom.link}`);\r\n        }\r\n    }, [globalRoom])\r\n    return (\r\n        room && <div className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>\r\n                    {!(room.ok === false) ? `Joining room ${room.name}` : `No room with name ${link}`}\r\n                </h3>\r\n                {!(room.ok === false) && (\r\n                    <>\r\n                        <p className=\"explanation\">\r\n                            Chose your username and password, you can use them to come back later.<br />Share the following link with your friends together with the password to let them join the draft.\r\n                            <code class=\"share-link\" onClick={copyLink}>\r\n                                <span className=\"link\">\r\n                                    https://pokemongo-drafter.herokuapp.com/joinroom/{link}\r\n                                </span>\r\n                                <i ref={icon} class=\"material-icons right\">content_copy</i>\r\n                            </code>\r\n                        </p>\r\n                        <form onSubmit={joinRoom}>\r\n                            <input placeholder=\"Username\" type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                            {usernameError != \"\" && <div className=\"error\">\r\n                                {usernameError}\r\n                            </div>}\r\n                            <input placeholder=\"Password\" type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                            {passwordError != \"\" && <div className=\"error\">\r\n                                {passwordError}\r\n                            </div>}\r\n                            <input placeholder=\"Room Password\" type=\"password\" value={roomPassword} onChange={handleRoomPasswordChange} />\r\n                            {roomPasswordError != \"\" && <div className=\"error\">\r\n                                {roomPasswordError}\r\n                            </div>}\r\n                            <button type=\"submit\">Join</button>\r\n                        </form>\r\n                    </>\r\n                )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JoinRoom;","import './App.css';\nimport { Home, Room, JoinRoom } from './views'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}>\n        </Route>\n        <Route path=\"/room/:link\" exact component={Room}>\n        </Route>\n        <Route path=\"/joinroom/:link\" exact component={JoinRoom}>\n        </Route>\n        <Route path=\"/test\" exact>\n          <div>Test</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SocketContextProvider from './contexts/SocketContext'\nimport RoomContextProvider from './contexts/RoomContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoomContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </RoomContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}